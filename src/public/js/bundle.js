/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/public/ts/constants.ts":
/*!************************************!*\
  !*** ./src/public/ts/constants.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COORDINATE_STEP: () => (/* binding */ COORDINATE_STEP),\n/* harmony export */   DEBUG: () => (/* binding */ DEBUG),\n/* harmony export */   DOT_BOX: () => (/* binding */ DOT_BOX),\n/* harmony export */   GRID_UNITS: () => (/* binding */ GRID_UNITS),\n/* harmony export */   LABEL_CONNECTION: () => (/* binding */ LABEL_CONNECTION),\n/* harmony export */   MOUSE_UPDATE_INTERVAL: () => (/* binding */ MOUSE_UPDATE_INTERVAL),\n/* harmony export */   PIXELS_PER_UNIT: () => (/* binding */ PIXELS_PER_UNIT),\n/* harmony export */   PLANE_SIZE: () => (/* binding */ PLANE_SIZE),\n/* harmony export */   TICK_COUNT: () => (/* binding */ TICK_COUNT)\n/* harmony export */ });\nvar PLANE_SIZE = 350; // Total size of plane in pixels\nvar GRID_UNITS = 10; // Number of grid units (-5 to +5)\nvar PIXELS_PER_UNIT = PLANE_SIZE / GRID_UNITS; // 40px per unit\nvar COORDINATE_STEP = 0.1; // Desired movement granularity\nvar TICK_COUNT = 11; // Number of tick marks on each axis\nvar MOUSE_UPDATE_INTERVAL = 16; // ~60fps\nvar DEBUG = false;\nvar DOT_BOX = {\n    MIN_WIDTH: 100,\n    MIN_HEIGHT: 45,\n    TOP_OFFSET: -23,\n    LEFT_PADDING: 25,\n    DOT_WIDTH: 6\n};\n// New label connection settings\nvar LABEL_CONNECTION = {\n    DEFAULT_LENGTH: 50, // Default length of connecting line in pixels\n    LINE_COLOR: '#d1d5db', // Color of connecting line\n    LINE_WIDTH: 1, // Width of connecting line\n    BOX_BORDER_COLOR: '#e5e7eb',\n    BOX_BACKGROUND: 'rgba(255, 255, 255, 0.95)',\n    BOX_BORDER_WIDTH: 1,\n    BOX_BORDER_RADIUS: 4,\n    MIN_LINE_LENGTH: 20, // Minimum length of connecting line\n    MAX_LINE_LENGTH: 150, // Maximum length of connecting line\n    LINE_POSITION: {\n        TOP: 'calc(50% + 0px)', // Positive moves down, negative moves up\n        LEFT: 'calc(50% - 0px)' // Positive moves right, negative moves left\n    }\n};\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/constants.ts?");

/***/ }),

/***/ "./src/public/ts/createTickMarks.ts":
/*!******************************************!*\
  !*** ./src/public/ts/createTickMarks.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coordinateToPixel: () => (/* binding */ coordinateToPixel),\n/* harmony export */   createTickMarks: () => (/* binding */ createTickMarks),\n/* harmony export */   formatCoordinateDisplay: () => (/* binding */ formatCoordinateDisplay),\n/* harmony export */   getPixelDeltaForCoordinate: () => (/* binding */ getPixelDeltaForCoordinate),\n/* harmony export */   normalizeCoordinate: () => (/* binding */ normalizeCoordinate),\n/* harmony export */   pixelToCoordinate: () => (/* binding */ pixelToCoordinate)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n\n\nfunction createTickMarks(xyPlane) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_1__[\"default\"])('createTickMarks');\n    var TICK_COUNT = 11;\n    var SEGMENT_SIZE = _constants__WEBPACK_IMPORTED_MODULE_0__.PLANE_SIZE / (TICK_COUNT - 1);\n    // First, remove any existing x-label elements\n    var existingLabels = Array.from(xyPlane.getElementsByClassName('x-label'));\n    existingLabels.forEach(function (label) { return label.remove(); });\n    function createTicks(isXAxis) {\n        var positions = Array.from({ length: TICK_COUNT }, function (_, i) { return i * SEGMENT_SIZE; });\n        var existingTicks = Array.from(xyPlane.getElementsByClassName(isXAxis ? 'x-tick' : 'y-tick'));\n        existingTicks.forEach(function (tick) { return tick.remove(); });\n        positions.forEach(function (pos, index) {\n            var tick = document.createElement('div');\n            var classes = [isXAxis ? 'x-tick' : 'y-tick'];\n            if (index === 5) {\n                classes.push('center-tick');\n            }\n            tick.className = classes.join(' ');\n            if (isXAxis) {\n                tick.style.left = \"\".concat(pos, \"px\");\n            }\n            else {\n                tick.style.top = \"\".concat(pos, \"px\");\n            }\n            xyPlane.appendChild(tick);\n        });\n    }\n    createTicks(true); // X-axis\n    createTicks(false); // Y-axis\n}\nfunction normalizeCoordinate(coordinate) {\n    //return Math.round(coordinate / COORDINATE_STEP) * COORDINATE_STEP;\n    return coordinate;\n}\nfunction coordinateToPixel(coordinate) {\n    var exactPixel = _constants__WEBPACK_IMPORTED_MODULE_0__.PLANE_SIZE / 2 + (coordinate * _constants__WEBPACK_IMPORTED_MODULE_0__.PIXELS_PER_UNIT);\n    // Force sub-pixel precision\n    return Number(exactPixel.toFixed(1));\n}\nfunction pixelToCoordinate(pixel) {\n    return Math.round((pixel - _constants__WEBPACK_IMPORTED_MODULE_0__.PLANE_SIZE / 2) / _constants__WEBPACK_IMPORTED_MODULE_0__.PIXELS_PER_UNIT * 100) / 100;\n    //return (pixel - PLANE_SIZE/2) / PIXELS_PER_UNIT;\n}\nfunction formatCoordinateDisplay(x, y) {\n    // Round to nearest 0.1 for display only\n    var displayX = Math.round(x * 10) / 10;\n    var displayY = Math.round(y * 10) / 10;\n    return \"(\".concat(displayX.toFixed(1), \", \").concat(displayY.toFixed(1), \")\");\n    //return `(${Number(x).toFixed(2)}, ${Number(y).toFixed(2)})`;\n}\nfunction getPixelDeltaForCoordinate(coordinateStep) {\n    // Remove rounding to maintain precise movement\n    return coordinateStep * _constants__WEBPACK_IMPORTED_MODULE_0__.PIXELS_PER_UNIT;\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/createTickMarks.ts?");

/***/ }),

/***/ "./src/public/ts/data.ts":
/*!*******************************!*\
  !*** ./src/public/ts/data.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToUndoHistory: () => (/* binding */ addToUndoHistory),\n/* harmony export */   generateDotId: () => (/* binding */ generateDotId),\n/* harmony export */   recordDotState: () => (/* binding */ recordDotState),\n/* harmony export */   tpf: () => (/* binding */ tpf)\n/* harmony export */ });\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n// Initialize undo history\nvar undoHistory = [];\nvar maxUndoHistory = 50;\nvar tpf = {\n    skipGraphClick: false,\n    isDragging: false,\n    debug: true,\n    offsetX: 0,\n    offsetY: 0,\n    currentDot: null,\n    selectedDot: null,\n    xAxisWidth: 0,\n    yAxisHeight: 0,\n    isLabelBoxDragging: false,\n    currentLabelBox: null,\n    labelBoxOffset: { x: 0, y: 0 }\n};\ndocument.addEventListener('DOMContentLoaded', function () {\n    var xAxis = document.getElementsByClassName(\"x-axis\")[0];\n    var yAxis = document.getElementsByClassName(\"y-axis\")[0];\n    if (xAxis && yAxis) {\n        tpf.xAxisWidth = xAxis.clientWidth;\n        tpf.yAxisHeight = yAxis.clientHeight;\n    }\n    document.addEventListener('keydown', handleKeyboardDelete);\n    document.addEventListener('keydown', handleUndo);\n});\nfunction generateDotId() {\n    return 'dot-' + Math.random().toString(36).substr(2, 9);\n}\nfunction addToUndoHistory(action) {\n    undoHistory.push(action);\n    if (undoHistory.length > maxUndoHistory) {\n        undoHistory.shift();\n    }\n}\nfunction recordDotState(dot) {\n    var labelEl = dot.querySelector('.user-dot-label');\n    var coordsElement = dot.querySelector('.dot-coordinates');\n    return {\n        x: dot.style.left,\n        y: dot.style.top,\n        coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n        label: (labelEl === null || labelEl === void 0 ? void 0 : labelEl.textContent) || '',\n        id: dot.getAttribute('data-dot-id') || generateDotId()\n    };\n}\nfunction updateDotState(dot, state) {\n    dot.style.left = state.x;\n    dot.style.top = state.y;\n    var coordsElement = dot.querySelector('.dot-coordinates');\n    if (coordsElement) {\n        coordsElement.textContent = state.coordinates;\n    }\n    var labelEl = dot.querySelector('.user-dot-label');\n    if (labelEl) {\n        labelEl.textContent = state.label;\n    }\n    if (state.id) {\n        dot.setAttribute('data-dot-id', state.id);\n    }\n}\nfunction handleUndo(event) {\n    if (event.ctrlKey && event.key.toLowerCase() === 'z') {\n        event.preventDefault();\n        var lastAction = undoHistory.pop();\n        if (!lastAction)\n            return;\n        var xyPlane = document.getElementById('xy-plane');\n        if (!xyPlane)\n            return;\n        switch (lastAction.type) {\n            case 'move':\n                if (lastAction.previousState) {\n                    var dot = document.querySelector(\"[data-dot-id=\\\"\".concat(lastAction.dotId, \"\\\"]\"));\n                    if (dot) {\n                        updateDotState(dot, lastAction.previousState);\n                        autosaveAfterUndo();\n                    }\n                }\n                break;\n            case 'delete':\n                if (lastAction.previousState) {\n                    var newDot = createDotElement(lastAction.previousState);\n                    xyPlane.appendChild(newDot);\n                    autosaveAfterUndo();\n                }\n                break;\n            case 'create':\n                var dotToRemove = document.querySelector(\"[data-dot-id=\\\"\".concat(lastAction.dotId, \"\\\"]\"));\n                if (dotToRemove) {\n                    dotToRemove.remove();\n                    autosaveAfterUndo();\n                }\n                break;\n        }\n    }\n}\nfunction createDotElement(state) {\n    var dot = document.createElement('div');\n    dot.className = 'dot-container';\n    dot.setAttribute('data-dot-id', state.id || generateDotId());\n    dot.style.transform = 'translate(-50%, -50%)';\n    updateDotState(dot, state);\n    dot.innerHTML = \"\\n        <div class='dot' style=\\\"position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);\\\"></div>\\n        <div class='coordinate-text' style=\\\"position: absolute; left: 15px; top: 50%; transform: translateY(-50%);\\\">\\n            <div class='user-dot-label' style='position: relative; margin-bottom: 4px;'>\".concat(state.label, \"</div>\\n            <div class='dot-coordinates' style='position: relative;'>\").concat(state.coordinates, \"</div>\\n        </div>\\n    \");\n    dot.addEventListener('contextmenu', function (e) { return e.preventDefault(); });\n    dot.addEventListener('mousedown', function (e) {\n        var target = e.target;\n        if (target.classList.contains('dot-container')) {\n            e.preventDefault();\n            tpf.isDragging = true;\n            tpf.currentDot = target;\n        }\n    });\n    return dot;\n}\nfunction handleKeyboardDelete(event) {\n    return __awaiter(this, void 0, void 0, function () {\n        var previousState, dotToDelete, urlParts, deleteEvent, error_1, urlParts, xyPlane, restoredDot;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!(event.key === 'Delete' && tpf.selectedDot)) return [3 /*break*/, 5];\n                    event.preventDefault();\n                    previousState = void 0;\n                    dotToDelete = tpf.selectedDot;\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 4, , 5]);\n                    previousState = recordDotState(dotToDelete);\n                    addToUndoHistory({\n                        type: 'delete',\n                        dotId: dotToDelete.getAttribute('data-dot-id') || generateDotId(),\n                        previousState: previousState\n                    });\n                    dotToDelete.remove();\n                    tpf.selectedDot = null;\n                    urlParts = window.location.pathname.split('/');\n                    if (!(urlParts.length > 2 && urlParts[1] !== '')) return [3 /*break*/, 3];\n                    return [4 /*yield*/, autosaveAfterUndo()];\n                case 2:\n                    _a.sent();\n                    _a.label = 3;\n                case 3:\n                    deleteEvent = new CustomEvent('dotDeleted', { bubbles: true });\n                    document.dispatchEvent(deleteEvent);\n                    return [3 /*break*/, 5];\n                case 4:\n                    error_1 = _a.sent();\n                    console.error('Failed to process delete:', error_1);\n                    urlParts = window.location.pathname.split('/');\n                    if (urlParts.length > 2 && urlParts[1] !== '' && previousState) {\n                        xyPlane = document.getElementById('xy-plane');\n                        if (xyPlane) {\n                            restoredDot = createDotElement(previousState);\n                            xyPlane.appendChild(restoredDot);\n                            tpf.selectedDot = restoredDot;\n                        }\n                        alert('Failed to delete dot. Please try again.');\n                    }\n                    return [3 /*break*/, 5];\n                case 5: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction autosaveAfterUndo() {\n    return __awaiter(this, void 0, void 0, function () {\n        var urlParts, dots, urlId, response, data, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 3, , 4]);\n                    urlParts = window.location.pathname.split('/');\n                    if (urlParts.length <= 2 || urlParts[1] === '') {\n                        return [2 /*return*/];\n                    }\n                    dots = Array.from(document.getElementsByClassName('dot-container')).map(function (dotEl) {\n                        var labelEl = dotEl.querySelector('.user-dot-label');\n                        var coordsElement = dotEl.querySelector('.dot-coordinates');\n                        var x = dotEl.style.left;\n                        var y = dotEl.style.top;\n                        if (!x || !y) {\n                            throw new Error('Invalid dot position');\n                        }\n                        return {\n                            x: x,\n                            y: y,\n                            coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n                            label: (labelEl === null || labelEl === void 0 ? void 0 : labelEl.textContent) || 'null'\n                        };\n                    });\n                    urlId = urlParts[urlParts.length - 1];\n                    return [4 /*yield*/, fetch(\"/api/pages/\".concat(urlId, \"/dots\"), {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({ dots: dots }),\n                            credentials: 'same-origin'\n                        })];\n                case 1:\n                    response = _a.sent();\n                    return [4 /*yield*/, response.json()];\n                case 2:\n                    data = _a.sent();\n                    if (!response.ok) {\n                        throw new Error(data.message || 'Failed to save dots');\n                    }\n                    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('Autosave completed', 'dots');\n                    return [2 /*return*/, data];\n                case 3:\n                    error_2 = _a.sent();\n                    if (window.location.pathname !== '/' && window.location.pathname !== '/index') {\n                        console.error('Error saving after undo:', error_2);\n                        throw error_2;\n                    }\n                    return [3 /*break*/, 4];\n                case 4: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/data.ts?");

/***/ }),

/***/ "./src/public/ts/dotsCreate.ts":
/*!*************************************!*\
  !*** ./src/public/ts/dotsCreate.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjustHoverBox: () => (/* binding */ adjustHoverBox),\n/* harmony export */   adjustSelectedBox: () => (/* binding */ adjustSelectedBox),\n/* harmony export */   createLabelEditor: () => (/* binding */ createLabelEditor),\n/* harmony export */   dotsCreate: () => (/* binding */ dotsCreate),\n/* harmony export */   updateConnectingLine: () => (/* binding */ updateConnectingLine)\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/public/ts/data.ts\");\n/* harmony import */ var _removeAnyExistingElementsWithClassName__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./removeAnyExistingElementsWithClassName */ \"./src/public/ts/removeAnyExistingElementsWithClassName.ts\");\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _mouseEvents__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mouseEvents */ \"./src/public/ts/mouseEvents.ts\");\n/* harmony import */ var _dotsSave__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dotsSave */ \"./src/public/ts/dotsSave.ts\");\n/* harmony import */ var _createTickMarks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createTickMarks */ \"./src/public/ts/createTickMarks.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\n/* harmony import */ var _editDeleteMenu__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./editDeleteMenu */ \"./src/public/ts/editDeleteMenu.ts\");\n/* harmony import */ var _dotsLoad__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dotsLoad */ \"./src/public/ts/dotsLoad.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\n// Generate a unique ID for dots\nfunction generateDotId() {\n    return 'dot-' + Math.random().toString(36).substr(2, 9);\n}\n// Main Dot Creation Function\nfunction dotsCreate() {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\"createDots\");\n    var xyPlane = document.getElementById(\"xy-plane\");\n    if (!xyPlane)\n        return;\n    xyPlane.addEventListener('click', function (e) {\n        // Handle dot selection/deselection\n        var target = e.target;\n        var dotContainer = findDotContainer(target);\n        // If we clicked on a dot\n        if (dotContainer && !dotContainer.classList.contains('editing')) {\n            // If clicking on the currently selected dot, deselect it\n            if (dotContainer === _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot) {\n                var coordsElement = dotContainer.querySelector('.dot-coordinates');\n                if (coordsElement) {\n                    // Store the current coordinates before deselecting\n                    var currentCoords = coordsElement.textContent || '';\n                    dotContainer.setAttribute('data-original-coords', currentCoords);\n                }\n                dotContainer.classList.remove('selected');\n                adjustHoverBox(dotContainer);\n                adjustSelectedBox(dotContainer);\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n            }\n            else {\n                // If clicking on a different dot, deselect the old one and select the new one\n                if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot) {\n                    var oldCoordsElement = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.querySelector('.dot-coordinates');\n                    if (oldCoordsElement) {\n                        var currentCoords = oldCoordsElement.textContent || '';\n                        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.setAttribute('data-original-coords', currentCoords);\n                    }\n                    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.classList.remove('selected');\n                    adjustHoverBox(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot);\n                    adjustSelectedBox(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot);\n                }\n                // Select the new dot\n                dotContainer.classList.add('selected');\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = dotContainer;\n                adjustHoverBox(dotContainer);\n                adjustSelectedBox(dotContainer);\n            }\n            e.stopPropagation();\n            return;\n        }\n        // If clicking on whitespace while a dot is selected\n        if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot && !dotContainer) {\n            var coordsElement = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.querySelector('.dot-coordinates');\n            if (coordsElement) {\n                // Store the current coordinates before deselecting\n                var currentCoords = coordsElement.textContent || '';\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.setAttribute('data-original-coords', currentCoords);\n            }\n            // Deselect the current dot\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.classList.remove('selected');\n            adjustHoverBox(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot);\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n            e.stopPropagation();\n            return;\n        }\n        // Only proceed to dot creation if we haven't handled a selection action\n        if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot) {\n            xyPlaneClickHandler(e);\n        }\n    });\n    function xyPlaneClickHandler(event) {\n        var target = event.target;\n        var xyPlane = document.getElementById('xy-plane');\n        if (!xyPlane)\n            return;\n        // Skip if clicking on dot elements\n        if (target.classList.contains('dot') ||\n            target.classList.contains('dot-container') ||\n            target.classList.contains('coordinate-text') ||\n            target.classList.contains('user-dot-label') ||\n            target.classList.contains('dot-coordinates')) {\n            return;\n        }\n        // If there was any drag movement, don't create a dot\n        if (_mouseEvents__WEBPACK_IMPORTED_MODULE_3__.isSelecting || _data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging) {\n            return;\n        }\n        // Check for any selected or multi-selected dots\n        var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n        // If there are selected dots, just clear the selection and return\n        if (selectedDots.length > 0) {\n            selectedDots.forEach(function (dot) {\n                dot.classList.remove('selected');\n                dot.classList.remove('multi-selected');\n                adjustHoverBox(dot);\n                adjustSelectedBox(dot);\n            });\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n            return;\n        }\n        var rawCoords = getGraphRawCoordinates(event);\n        var graphCoords = {\n            x: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.pixelToCoordinate)(rawCoords.x),\n            y: -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.pixelToCoordinate)(rawCoords.y)\n        };\n        var pixelPosition = {\n            x: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.coordinateToPixel)(graphCoords.x),\n            y: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.coordinateToPixel)(-graphCoords.y)\n        };\n        var adjustedPosition = {\n            x: pixelPosition.x,\n            y: pixelPosition.y\n        };\n        var dotId = generateDotId();\n        var savedDot = {\n            x: adjustedPosition.x + 'px',\n            y: adjustedPosition.y + 'px',\n            coordinates: \"(\".concat(graphCoords.x.toFixed(2), \", \").concat(graphCoords.y.toFixed(2), \")\"),\n            label: '',\n            id: dotId,\n            labelOffset: {\n                x: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH,\n                y: -_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH\n            }\n        };\n        if (isClickInsideGraph(graphCoords)) {\n            if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot === null) {\n                try {\n                    var dot_1 = (0,_dotsLoad__WEBPACK_IMPORTED_MODULE_8__.loadSavedDots)(savedDot);\n                    xyPlane.appendChild(dot_1);\n                    // Update connecting line after adding to DOM\n                    requestAnimationFrame(function () {\n                        updateConnectingLine(dot_1);\n                    });\n                    // Start label editing\n                    var labelElement_1 = dot_1.querySelector('.user-dot-label');\n                    if (labelElement_1) {\n                        setTimeout(function () {\n                            createLabelEditor(labelElement_1, dot_1);\n                        }, 0);\n                    }\n                    // Fire creation event\n                    var createAction = {\n                        type: 'create',\n                        dotId: dotId,\n                        newState: savedDot\n                    };\n                    document.dispatchEvent(new CustomEvent('dotCreated', {\n                        bubbles: true,\n                        detail: createAction\n                    }));\n                    // Autosave if not on homepage\n                    var urlParts = window.location.pathname.split('/');\n                    if (urlParts.length > 2 && urlParts[1] !== '') {\n                        (0,_dotsSave__WEBPACK_IMPORTED_MODULE_4__.autosaveDots)();\n                    }\n                }\n                catch (error) {\n                    console.error('Error in dot creation:', error);\n                }\n            }\n        }\n    }\n}\n// Helper Dot Creation Function\nfunction createNewDot(savedDot, xyPlane) {\n    var _a, _b, _c;\n    console.log('Creating new dot:', {\n        position: { x: savedDot.x, y: savedDot.y },\n        coordinates: savedDot.coordinates,\n        id: savedDot.id\n    });\n    try {\n        // Create container\n        var dot_2 = document.createElement('div');\n        dot_2.classList.add('dot-container');\n        dot_2.classList.add('editing');\n        dot_2.setAttribute('data-dot-id', (_a = savedDot.id) !== null && _a !== void 0 ? _a : '');\n        dot_2.style.position = 'absolute';\n        dot_2.style.left = savedDot.x;\n        dot_2.style.top = savedDot.y;\n        // Create dot element with centered positioning\n        var dotElement = document.createElement('div');\n        dotElement.className = 'dot';\n        dotElement.style.position = 'absolute';\n        dotElement.style.top = '50%';\n        dotElement.style.left = '50%';\n        dotElement.style.transform = 'translate(-50%, -50%)';\n        dot_2.appendChild(dotElement);\n        // Calculate dot dimensions for centering\n        var dotRect = dotElement.getBoundingClientRect();\n        var dotRadius = dotRect.width / 2;\n        console.log('Dot element measurements:', {\n            rect: dotRect,\n            radius: dotRadius\n        });\n        // Create label container first so we can measure it\n        var labelContainer_1 = document.createElement('div');\n        labelContainer_1.className = 'label-container';\n        Object.assign(labelContainer_1.style, {\n            position: 'absolute',\n            left: \"\".concat((_c = (_b = savedDot.labelOffset) === null || _b === void 0 ? void 0 : _b.x) !== null && _c !== void 0 ? _c : _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH, \"px\"),\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BACKGROUND,\n            border: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_COLOR),\n            borderRadius: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_RADIUS, \"px\"),\n            padding: '8px',\n            cursor: 'move',\n            whiteSpace: 'nowrap',\n            zIndex: '2'\n        });\n        labelContainer_1.innerHTML = \"\\n            <div class='user-dot-label'></div>\\n            <div class='dot-coordinates'>\".concat(savedDot.coordinates, \"</div>\\n        \");\n        dot_2.appendChild(labelContainer_1);\n        // Force a layout calculation\n        dot_2.offsetHeight;\n        labelContainer_1.offsetHeight;\n        // Create connecting line after label container\n        var line = document.createElement('div');\n        line.className = 'connecting-line';\n        // Initial line setup with explicit positioning\n        Object.assign(line.style, {\n            position: 'absolute',\n            width: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH, \"px\"),\n            height: '1px',\n            top: '50%',\n            left: '50%',\n            transform: 'rotate(0deg)', // Initial straight position\n            transformOrigin: 'left center',\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR,\n            borderTop: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR),\n            pointerEvents: 'none',\n            display: 'block',\n            zIndex: '1'\n        });\n        dot_2.insertBefore(line, labelContainer_1);\n        // Store initial line properties\n        dot_2.setAttribute('data-line-length', _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH.toString());\n        dot_2.setAttribute('data-line-angle', '0');\n        // Add event listeners\n        labelContainer_1.addEventListener('dblclick', function (e) {\n            e.stopPropagation();\n            var labelElement = labelContainer_1.querySelector('.user-dot-label');\n            if (labelElement) {\n                createLabelEditor(labelElement, dot_2);\n            }\n        });\n        dot_2.addEventListener(\"contextmenu\", mouseContextmenu);\n        dot_2.addEventListener('mousedown', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseDown);\n        dot_2.addEventListener('mouseup', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseUp);\n        window.addEventListener('mousemove', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseMove, false);\n        // Add to DOM\n        xyPlane.appendChild(dot_2);\n        // Immediately calculate and set the correct line position\n        updateConnectingLine(dot_2);\n        // Set up label editing\n        var labelElement_2 = dot_2.querySelector('.user-dot-label');\n        if (labelElement_2) {\n            setTimeout(function () {\n                createLabelEditor(labelElement_2, dot_2);\n            }, 0);\n        }\n        // Verify final structure\n        var finalMeasurements = {\n            dotRect: dotElement.getBoundingClientRect(),\n            lineRect: line.getBoundingClientRect(),\n            labelRect: labelContainer_1.getBoundingClientRect()\n        };\n        console.log('Final dot verification:', {\n            id: dot_2.getAttribute('data-dot-id'),\n            position: {\n                left: dot_2.style.left,\n                top: dot_2.style.top\n            },\n            measurements: finalMeasurements,\n            lineProperties: {\n                length: dot_2.getAttribute('data-line-length'),\n                angle: dot_2.getAttribute('data-line-angle'),\n                transform: line.style.transform\n            }\n        });\n        return dot_2;\n    }\n    catch (error) {\n        console.error('Error creating new dot:', error);\n        if (error instanceof Error) {\n            console.error('Creation error details:', {\n                message: error.message,\n                stack: error.stack\n            });\n        }\n        throw error;\n    }\n}\nfunction updateConnectingLine(dot) {\n    var line = dot.querySelector('.connecting-line');\n    var labelContainer = dot.querySelector('.label-container');\n    var dotElement = dot.querySelector('.dot');\n    if (!line || !labelContainer || !dotElement) {\n        console.warn('Missing elements:', { line: !!line, label: !!labelContainer, dot: !!dotElement });\n        return;\n    }\n    // Force layout calculation to ensure accurate measurements\n    dot.offsetHeight;\n    labelContainer.offsetHeight;\n    // Get dimensions after layout is complete\n    var labelBox = labelContainer.getBoundingClientRect();\n    var dotBox = dotElement.getBoundingClientRect();\n    var containerRect = dot.getBoundingClientRect();\n    // Calculate center points\n    var dotCenterX = dotBox.left - containerRect.left + dotBox.width / 2;\n    var dotCenterY = dotBox.top - containerRect.top + dotBox.height / 2;\n    var labelCenterY = labelBox.top - containerRect.top + labelBox.height / 2;\n    var labelLeftX = labelBox.left - containerRect.left;\n    var dx = labelLeftX - dotCenterX;\n    var dy = labelCenterY - dotCenterY;\n    var angle = Math.atan2(dy, dx) * (180 / Math.PI);\n    var length = Math.sqrt(dx * dx + dy * dy);\n    console.log('Line calculation:', {\n        measurements: {\n            dotCenter: { x: dotCenterX, y: dotCenterY },\n            labelCenter: { x: labelLeftX, y: labelCenterY },\n            dx: dx,\n            dy: dy,\n            angle: angle,\n            length: length\n        }\n    });\n    try {\n        // Update line properties in a single operation\n        Object.assign(line.style, {\n            position: 'absolute',\n            width: \"\".concat(length, \"px\"),\n            height: '1px',\n            top: '50%',\n            left: '50%',\n            transform: \"rotate(\".concat(angle, \"deg)\"),\n            transformOrigin: 'left center',\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR,\n            borderTop: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR),\n            display: 'block',\n            zIndex: '1',\n            pointerEvents: 'none'\n        });\n        dot.setAttribute('data-line-length', length.toString());\n        dot.setAttribute('data-line-angle', angle.toString());\n        // Verify final positioning\n        var finalLineBox = line.getBoundingClientRect();\n        console.log('Final line state:', {\n            dotId: dot.getAttribute('data-dot-id'),\n            dimensions: {\n                width: finalLineBox.width,\n                height: finalLineBox.height\n            },\n            styles: {\n                transform: line.style.transform,\n                width: line.style.width,\n                top: line.style.top,\n                left: line.style.left\n            },\n            labelPosition: {\n                left: labelContainer.style.left,\n                top: labelContainer.style.top\n            }\n        });\n    }\n    catch (error) {\n        console.error('Error updating connecting line:', {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            dot: dot.getAttribute('data-dot-id'),\n            measurements: { length: length, angle: angle }\n        });\n    }\n}\n// dot-container hover & Selected box\nfunction adjustHoverBox(dot) {\n    // Convert to HTMLElement if not already\n    var dotElement = dot instanceof HTMLElement\n        ? dot\n        : dot.classList.contains('dot-container')\n            ? dot\n            : document.createElement('div');\n    var labelElement = dotElement.querySelector('.user-dot-label');\n    var coordsElement = dotElement.querySelector('.dot-coordinates');\n    if (!labelElement || !coordsElement)\n        return;\n    var labelRect = labelElement.getBoundingClientRect();\n    var coordsRect = coordsElement.getBoundingClientRect();\n    var totalWidth = Math.max(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.MIN_WIDTH, Math.max(labelRect.width, coordsRect.width) + _constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.LEFT_PADDING);\n    var totalHeight = Math.max(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.MIN_HEIGHT, coordsRect.bottom - labelRect.top + 10);\n    dotElement.style.setProperty('--hover-width', \"\".concat(totalWidth, \"px\"));\n    dotElement.style.setProperty('--hover-height', \"\".concat(totalHeight, \"px\"));\n    dotElement.style.setProperty('--hover-top', \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.TOP_OFFSET, \"px\"));\n    dotElement.style.setProperty('--hover-left', \"-\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.DOT_WIDTH / 2 + 2, \"px\"));\n}\nfunction adjustSelectedBox(dot) {\n    // Convert to HTMLElement if not already\n    var dotElement = dot instanceof HTMLElement\n        ? dot\n        : dot.classList.contains('dot-container')\n            ? dot\n            : document.createElement('div');\n    var labelElement = dotElement.querySelector('.user-dot-label');\n    var coordsElement = dotElement.querySelector('.dot-coordinates');\n    if (!labelElement || !coordsElement)\n        return;\n    var labelRect = labelElement.getBoundingClientRect();\n    var coordsRect = coordsElement.getBoundingClientRect();\n    var totalWidth = Math.max(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.MIN_WIDTH, Math.max(labelRect.width, coordsRect.width) + _constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.LEFT_PADDING);\n    var totalHeight = Math.max(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.MIN_HEIGHT, coordsRect.bottom - labelRect.top + 10);\n    dotElement.style.setProperty('--hover-width', \"\".concat(totalWidth, \"px\"));\n    dotElement.style.setProperty('--hover-height', \"\".concat(totalHeight, \"px\"));\n    dotElement.style.setProperty('--hover-top', \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.TOP_OFFSET, \"px\"));\n    dotElement.style.setProperty('--hover-left', \"-\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.DOT_BOX.DOT_WIDTH / 2 + 2, \"px\"));\n}\nfunction updateCoordinatePrecision(dotContainer, highPrecision) {\n    var coordsElement = dotContainer.querySelector('.dot-coordinates');\n    if (!coordsElement)\n        return;\n    // Keep using the exactly calculated coordinates\n    var currentCoords = coordsElement.textContent || '';\n    dotContainer.setAttribute('data-original-coords', currentCoords);\n}\nfunction xyPlaneClickHandler(event) {\n    var target = event.target;\n    if (target.classList.contains('dot') ||\n        target.classList.contains('dot-container') ||\n        target.classList.contains('coordinate-text') ||\n        target.classList.contains('user-dot-label') ||\n        target.classList.contains('dot-coordinates')) {\n        return;\n    }\n    var rawCoords = getGraphRawCoordinates(event);\n    var graphCoords = {\n        x: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.pixelToCoordinate)(rawCoords.x),\n        y: -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.pixelToCoordinate)(rawCoords.y)\n    };\n    var pixelPosition = {\n        x: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.coordinateToPixel)(graphCoords.x),\n        y: (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_5__.coordinateToPixel)(-graphCoords.y)\n    };\n    var adjustedPosition = {\n        x: pixelPosition.x,\n        y: pixelPosition.y\n    };\n    var dotId = generateDotId();\n    var savedDot = {\n        x: adjustedPosition.x + 'px',\n        y: adjustedPosition.y + 'px',\n        coordinates: \"(\".concat(graphCoords.x.toFixed(2), \", \").concat(graphCoords.y.toFixed(2), \")\"),\n        // For display purposes, we'll format this differently when rendering\n        displayCoordinates: \"(\".concat(graphCoords.x.toFixed(1), \", \").concat(graphCoords.y.toFixed(1), \")\"),\n        label: '',\n        id: dotId,\n        labelOffset: {\n            x: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH,\n            y: -_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH\n        }\n    };\n    if (isClickInsideGraph(graphCoords)) {\n        if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot === null) {\n            var dot_3 = addDot();\n            dot_3.setAttribute('data-dot-id', dotId);\n            dot_3.style.left = savedDot.x;\n            dot_3.style.top = savedDot.y;\n            var dotElement = document.createElement('div');\n            dotElement.className = 'dot';\n            dotElement.style.position = 'absolute';\n            dotElement.style.top = '50%';\n            dotElement.style.left = '50%';\n            dotElement.style.transform = 'translate(-50%, -50%)';\n            var line = document.createElement('div');\n            line.className = 'connecting-line';\n            line.style.position = 'absolute';\n            line.style.width = \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH, \"px\");\n            line.style.height = '1px';\n            line.style.top = '50%';\n            line.style.left = '50%';\n            line.style.transformOrigin = 'left center';\n            line.style.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR;\n            line.style.borderTop = \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.LINE_COLOR);\n            line.style.pointerEvents = 'none';\n            line.style.display = 'block';\n            line.style.visibility = 'visible';\n            line.style.zIndex = '1';\n            var labelContainer_2 = document.createElement('div');\n            labelContainer_2.className = 'label-container';\n            labelContainer_2.style.position = 'absolute';\n            labelContainer_2.style.backgroundColor = _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BACKGROUND;\n            labelContainer_2.style.border = \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_COLOR);\n            labelContainer_2.style.borderRadius = \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.BOX_BORDER_RADIUS, \"px\");\n            labelContainer_2.style.padding = '8px';\n            labelContainer_2.style.cursor = 'move';\n            labelContainer_2.style.zIndex = '2';\n            var labelOffset = savedDot.labelOffset || {\n                x: _constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH,\n                y: -_constants__WEBPACK_IMPORTED_MODULE_6__.LABEL_CONNECTION.DEFAULT_LENGTH\n            };\n            labelContainer_2.style.left = \"\".concat(labelOffset.x, \"px\");\n            labelContainer_2.style.top = \"\".concat(labelOffset.y, \"px\");\n            labelContainer_2.innerHTML = \"\\n                <div class='user-dot-label'>\".concat(savedDot.label || '', \"</div>\\n                <div class='dot-coordinates'>\").concat(savedDot.coordinates, \"</div>\\n            \");\n            dot_3.appendChild(dotElement);\n            dot_3.appendChild(line);\n            dot_3.appendChild(labelContainer_2);\n            dot_3.classList.add('editing');\n            labelContainer_2.addEventListener('dblclick', function (e) {\n                e.stopPropagation();\n                var labelElement = labelContainer_2.querySelector('.user-dot-label');\n                if (labelElement) {\n                    createLabelEditor(labelElement, dot_3);\n                }\n            });\n            dot_3.addEventListener(\"contextmenu\", mouseContextmenu);\n            dot_3.addEventListener('mousedown', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseDown);\n            dot_3.addEventListener('mouseup', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseUp);\n            window.addEventListener('mousemove', _mouseEvents__WEBPACK_IMPORTED_MODULE_3__.mouseMove, false);\n            var xyPlane = document.getElementById('xy-plane');\n            if (xyPlane) {\n                var dot_4 = createNewDot(savedDot, xyPlane);\n                xyPlane.appendChild(dot_4);\n                updateConnectingLine(dot_4);\n                var labelElement_3 = dot_4.querySelector('.user-dot-label');\n                if (labelElement_3) {\n                    setTimeout(function () {\n                        createLabelEditor(labelElement_3, dot_4);\n                    }, 0);\n                }\n                var createAction = {\n                    type: 'create',\n                    dotId: dotId,\n                    newState: savedDot\n                };\n                document.dispatchEvent(new CustomEvent('dotCreated', {\n                    bubbles: true,\n                    detail: createAction\n                }));\n                var urlParts = window.location.pathname.split('/');\n                if (urlParts.length > 2 && urlParts[1] !== '') {\n                    (0,_dotsSave__WEBPACK_IMPORTED_MODULE_4__.autosaveDots)();\n                }\n            }\n        }\n    }\n}\nfunction createLabelEditor(labelElement, dotContainer) {\n    var _this = this;\n    var input = document.createElement('input');\n    input.type = 'text';\n    input.className = 'label-input';\n    // Pre-populate the input with the current label text\n    input.value = labelElement.textContent || '';\n    var labelRect = labelElement.getBoundingClientRect();\n    var containerRect = dotContainer.getBoundingClientRect();\n    input.style.top = (labelRect.top - containerRect.top) + 'px';\n    input.style.left = (labelRect.left - containerRect.left) + 'px';\n    var isEscPressed = false;\n    var isFinishing = false;\n    labelElement.style.visibility = 'hidden';\n    // Use setTimeout to ensure cursor placement after focus\n    setTimeout(function () {\n        input.focus();\n        input.setSelectionRange(input.value.length, input.value.length);\n    }, 0);\n    var finishEdit = function () { return __awaiter(_this, void 0, void 0, function () {\n        var previousLabel, newLabel, labelChangeEvent, urlParts, dots, error_1, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (isEscPressed)\n                        return [2 /*return*/];\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 7, , 8]);\n                    previousLabel = labelElement.textContent || '';\n                    newLabel = input.value || 'null';\n                    labelElement.textContent = newLabel;\n                    labelElement.style.visibility = 'visible';\n                    dotContainer.classList.remove('editing');\n                    if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot && _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot !== dotContainer) {\n                        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot.classList.remove('selected');\n                        updateCoordinatePrecision(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot, false);\n                        adjustHoverBox(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot);\n                    }\n                    if (input && input.parentNode === dotContainer) {\n                        dotContainer.removeChild(input);\n                    }\n                    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = dotContainer;\n                    dotContainer.classList.add('selected');\n                    updateCoordinatePrecision(dotContainer, true);\n                    adjustHoverBox(dotContainer);\n                    labelChangeEvent = new CustomEvent('dotLabelChanged', {\n                        bubbles: true,\n                        detail: {\n                            dotId: dotContainer.getAttribute('data-dot-id'),\n                            previousLabel: previousLabel,\n                            newLabel: newLabel\n                        }\n                    });\n                    document.dispatchEvent(labelChangeEvent);\n                    urlParts = window.location.pathname.split('/');\n                    if (!(urlParts.length > 2 && urlParts[1] !== '')) return [3 /*break*/, 6];\n                    _a.label = 2;\n                case 2:\n                    _a.trys.push([2, 5, , 6]);\n                    dots = Array.from(document.getElementsByClassName('dot-container')).map(function (dotEl) {\n                        var labelEl = dotEl.querySelector('.user-dot-label');\n                        var coordsElement = dotEl.querySelector('.dot-coordinates');\n                        return {\n                            x: dotEl.style.left,\n                            y: dotEl.style.top,\n                            coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n                            label: (labelEl === null || labelEl === void 0 ? void 0 : labelEl.textContent) || 'null'\n                        };\n                    });\n                    return [4 /*yield*/, (0,_dotsSave__WEBPACK_IMPORTED_MODULE_4__.dotsSave)(dots)];\n                case 3:\n                    _a.sent();\n                    return [4 /*yield*/, (0,_dotsSave__WEBPACK_IMPORTED_MODULE_4__.autosaveDots)()];\n                case 4:\n                    _a.sent();\n                    return [3 /*break*/, 6];\n                case 5:\n                    error_1 = _a.sent();\n                    console.error('Error saving dots:', error_1);\n                    return [3 /*break*/, 6];\n                case 6: return [3 /*break*/, 8];\n                case 7:\n                    error_2 = _a.sent();\n                    console.error('Error in finishEdit:', error_2);\n                    if (labelElement) {\n                        labelElement.style.visibility = 'visible';\n                    }\n                    return [3 /*break*/, 8];\n                case 8: return [2 /*return*/];\n            }\n        });\n    }); };\n    input.addEventListener('blur', function () {\n        if (isFinishing || isEscPressed)\n            return;\n        isFinishing = true;\n        requestAnimationFrame(function () {\n            if (!isEscPressed) {\n                finishEdit();\n            }\n            labelElement.style.visibility = 'visible';\n            isFinishing = false;\n        });\n    });\n    input.addEventListener('keydown', function (e) { return __awaiter(_this, void 0, void 0, function () {\n        var dotState, cancelEvent, urlParts, error_3;\n        var _a;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    if (!(e.key === 'Enter')) return [3 /*break*/, 3];\n                    e.preventDefault();\n                    if (!!isFinishing) return [3 /*break*/, 2];\n                    isFinishing = true;\n                    return [4 /*yield*/, finishEdit()];\n                case 1:\n                    _b.sent();\n                    labelElement.style.visibility = 'visible';\n                    isFinishing = false;\n                    _b.label = 2;\n                case 2: return [3 /*break*/, 7];\n                case 3:\n                    if (!(e.key === 'Escape')) return [3 /*break*/, 7];\n                    e.preventDefault();\n                    isEscPressed = true;\n                    dotState = {\n                        x: dotContainer.style.left,\n                        y: dotContainer.style.top,\n                        coordinates: ((_a = dotContainer.querySelector('.dot-coordinates')) === null || _a === void 0 ? void 0 : _a.textContent) || '',\n                        label: '',\n                        id: dotContainer.getAttribute('data-dot-id') || ''\n                    };\n                    if (input.parentNode === dotContainer) {\n                        dotContainer.removeChild(input);\n                    }\n                    if (dotContainer.parentNode) {\n                        dotContainer.parentNode.removeChild(dotContainer);\n                    }\n                    labelElement.style.visibility = 'visible';\n                    cancelEvent = new CustomEvent('dotCreateCanceled', {\n                        bubbles: true,\n                        detail: { dotState: dotState }\n                    });\n                    document.dispatchEvent(cancelEvent);\n                    urlParts = window.location.pathname.split('/');\n                    if (!(urlParts.length > 2 && urlParts[1] !== '')) return [3 /*break*/, 7];\n                    _b.label = 4;\n                case 4:\n                    _b.trys.push([4, 6, , 7]);\n                    return [4 /*yield*/, (0,_dotsSave__WEBPACK_IMPORTED_MODULE_4__.autosaveDots)()];\n                case 5:\n                    _b.sent();\n                    return [3 /*break*/, 7];\n                case 6:\n                    error_3 = _b.sent();\n                    console.error('Error saving after cancel:', error_3);\n                    return [3 /*break*/, 7];\n                case 7: return [2 /*return*/];\n            }\n        });\n    }); });\n    dotContainer.appendChild(input);\n    input.focus();\n    input.select();\n}\nfunction mouseContextmenu(event) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('dot.contextmenu');\n    event.preventDefault();\n    (0,_removeAnyExistingElementsWithClassName__WEBPACK_IMPORTED_MODULE_1__.removeAnyExistingElementsWithClassName)('edit-menu');\n    var target = event.target;\n    var dotContainer = findDotContainer(target);\n    if (dotContainer) {\n        (0,_editDeleteMenu__WEBPACK_IMPORTED_MODULE_7__.editDeleteMenu)(dotContainer);\n    }\n    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot = null;\n}\nfunction findDotContainer(element) {\n    if (element.classList.contains('dot-container')) {\n        return element;\n    }\n    if (element.parentElement) {\n        return findDotContainer(element.parentElement);\n    }\n    return null;\n}\nfunction isClickInsideGraph(coords) {\n    return coords.x >= -5 &&\n        coords.x <= 5 &&\n        coords.y >= -5 &&\n        coords.y <= 5;\n}\nfunction getGraphRawCoordinates(event) {\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        throw new Error('xy-plane not found');\n    var rect = xyPlane.getBoundingClientRect();\n    var x = event.clientX - rect.left + 0; // Subtract half dot height (4px/2)\n    var y = event.clientY - rect.top + 0; // Subtract half dot height (4px/2)\n    return { x: x, y: y };\n}\nfunction addDot() {\n    var dot = document.createElement(\"div\");\n    dot.classList.add(\"dot-container\");\n    dot.classList.add(\"editing\");\n    return dot;\n}\nfunction inspectDotStructure(dot) {\n    // Get all elements\n    var line = dot.querySelector('.connecting-line');\n    var label = dot.querySelector('.label-container');\n    var dotElement = dot.querySelector('.dot');\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('Dot container structure:', 'debug', {\n        dotContainer: {\n            classList: Array.from(dot.classList),\n            style: {\n                position: dot.style.position,\n                left: dot.style.left,\n                top: dot.style.top,\n                transform: dot.style.transform\n            }\n        },\n        line: line ? {\n            classList: Array.from(line.classList),\n            style: {\n                position: line.style.position,\n                width: line.style.width,\n                height: line.style.height,\n                transform: line.style.transform,\n                backgroundColor: line.style.backgroundColor\n            }\n        } : null,\n        label: label ? {\n            classList: Array.from(label.classList),\n            style: {\n                position: label.style.position,\n                left: label.style.left,\n                top: label.style.top\n            }\n        } : null,\n        dotElement: dotElement ? {\n            classList: Array.from(dotElement.classList),\n            style: {\n                position: dotElement.style.position,\n                left: dotElement.style.left,\n                top: dotElement.style.top\n            }\n        } : null\n    });\n}\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/dotsCreate.ts?");

/***/ }),

/***/ "./src/public/ts/dotsLoad.ts":
/*!***********************************!*\
  !*** ./src/public/ts/dotsLoad.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjustHoverBox: () => (/* binding */ adjustHoverBox),\n/* harmony export */   dotsLoad: () => (/* binding */ dotsLoad),\n/* harmony export */   findDotContainer: () => (/* binding */ findDotContainer),\n/* harmony export */   handleContextMenu: () => (/* binding */ handleContextMenu),\n/* harmony export */   loadSavedDots: () => (/* binding */ loadSavedDots),\n/* harmony export */   waitForXYPlane: () => (/* binding */ waitForXYPlane)\n/* harmony export */ });\n/* harmony import */ var _mouseEvents__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mouseEvents */ \"./src/public/ts/mouseEvents.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/public/ts/data.ts\");\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./src/public/ts/utils.ts\");\n/* harmony import */ var _dotsCreate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dotsCreate */ \"./src/public/ts/dotsCreate.ts\");\n/* harmony import */ var _keyboardUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./keyboardUtils */ \"./src/public/ts/keyboardUtils.ts\");\n/* harmony import */ var _createTickMarks__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createTickMarks */ \"./src/public/ts/createTickMarks.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\n\nfunction loadSavedDots(savedDot) {\n    var _a;\n    var dot = document.createElement('div');\n    dot.classList.add('dot-container');\n    dot.setAttribute('data-dot-id', savedDot.id || (0,_data__WEBPACK_IMPORTED_MODULE_1__.generateDotId)());\n    dot.style.position = 'absolute';\n    dot.style.left = savedDot.x;\n    dot.style.top = savedDot.y;\n    dot.setAttribute('data-original-position', JSON.stringify({\n        x: savedDot.x,\n        y: savedDot.y\n    }));\n    try {\n        if (!savedDot.coordinates) {\n            throw new Error('Missing coordinates string');\n        }\n        var coordMatch = savedDot.coordinates.match(/\\(([-\\d.]+),\\s*([-\\d.]+)\\)/);\n        if (!coordMatch) {\n            throw new Error('Invalid coordinates format');\n        }\n        var gridX = parseFloat(coordMatch[1]);\n        var gridY = parseFloat(coordMatch[2]);\n        if (isNaN(gridX) || isNaN(gridY)) {\n            throw new Error('Invalid coordinate values');\n        }\n        // Create dot element with proper positioning\n        var dotElement = document.createElement('div');\n        dotElement.className = 'dot';\n        dotElement.style.position = 'absolute';\n        dotElement.style.top = 'calc(50% - 1px)'; // Negative makes it go down\n        dotElement.style.left = 'calc(50% - 2px)'; // Negative adj makes it go right\n        dotElement.setAttribute('data-position-set', 'true');\n        dot.appendChild(dotElement);\n        // Get dot dimensions for centering\n        var dotRect = dotElement.getBoundingClientRect();\n        var dotRadius = dotRect.width / 2;\n        // Use saved label position or default\n        var labelPosition = savedDot.labelOffset || {\n            x: _constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.DEFAULT_LENGTH,\n            y: -_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.DEFAULT_LENGTH\n        };\n        // Create connecting line with precise measurements\n        var line_1 = document.createElement('div');\n        line_1.className = 'connecting-line';\n        var lineLength = savedDot.lineLength ||\n            Math.sqrt(labelPosition.x * labelPosition.x + labelPosition.y * labelPosition.y);\n        Object.assign(line_1.style, {\n            position: 'absolute',\n            width: \"\".concat(lineLength, \"px\"),\n            height: '1px',\n            transformOrigin: \"\".concat(dotRadius, \"px center\"),\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.LINE_COLOR,\n            borderTop: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.LINE_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.LINE_COLOR),\n            pointerEvents: 'none',\n            display: 'block',\n            visibility: 'visible',\n            zIndex: '1'\n        });\n        // Validate line styles\n        if (!line_1.style.width || !line_1.style.transformOrigin) {\n            console.error('Failed to apply line styles');\n            throw new Error('Line style application failed');\n        }\n        dot.setAttribute('data-line-length', lineLength.toString());\n        // Calculate and apply line angle\n        var lineAngle = (_a = savedDot.lineAngle) !== null && _a !== void 0 ? _a : Math.atan2(labelPosition.y, labelPosition.x) * (180 / Math.PI);\n        line_1.style.transform = \"rotate(\".concat(lineAngle, \"deg)\");\n        dot.setAttribute('data-line-angle', lineAngle.toString());\n        dot.appendChild(line_1);\n        // Create label container with precise positioning\n        var labelContainer_1 = document.createElement('div');\n        labelContainer_1.className = 'label-container';\n        Object.assign(labelContainer_1.style, {\n            position: 'absolute',\n            left: \"\".concat(labelPosition.x, \"px\"),\n            top: \"\".concat(labelPosition.y, \"px\"),\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.BOX_BACKGROUND,\n            border: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.BOX_BORDER_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.BOX_BORDER_COLOR),\n            borderRadius: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_3__.LABEL_CONNECTION.BOX_BORDER_RADIUS, \"px\"),\n            padding: '8px',\n            cursor: 'move',\n            whiteSpace: 'nowrap',\n            zIndex: '2'\n        });\n        labelContainer_1.innerHTML = \"\\n            <div class='user-dot-label'>\".concat(savedDot.label || '', \"</div>\\n            <div class='dot-coordinates'>\").concat(savedDot.displayCoordinates || (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_7__.formatCoordinateDisplay)(gridX, gridY), \"</div>\\n        \");\n        // Verify label elements\n        if (!labelContainer_1.querySelector('.user-dot-label') ||\n            !labelContainer_1.querySelector('.dot-coordinates')) {\n            throw new Error('Failed to create label elements');\n        }\n        dot.appendChild(labelContainer_1);\n        // Add drag event listener\n        labelContainer_1.addEventListener('dblclick', function (e) {\n            e.stopPropagation();\n            // Instead of startLabelBoxDrag, we want to trigger label editing\n            var labelElement = labelContainer_1.querySelector('.user-dot-label');\n            if (labelElement) {\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.createLabelEditor)(labelElement, dot);\n            }\n        });\n        // Store complete position data\n        dot.setAttribute('data-position', JSON.stringify({\n            x: gridX,\n            y: gridY,\n            labelOffset: labelPosition,\n            lineLength: lineLength,\n            lineAngle: lineAngle\n        }));\n        // Store original offset for debugging and state management\n        dot.setAttribute('data-original-offset', JSON.stringify(labelPosition));\n        // Verify layout and measurements\n        Promise.resolve().then(function () {\n            var lineRect = line_1.getBoundingClientRect();\n            var labelRect = labelContainer_1.getBoundingClientRect();\n            if (lineRect.width === 0 || labelRect.width === 0) {\n                console.warn('Zero-width elements detected, updating layout');\n                (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateConnectingLine)(dot);\n            }\n        });\n        // Initial line update\n        requestAnimationFrame(function () { return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.updateConnectingLine)(dot); });\n        var labelBounds = labelContainer_1.getBoundingClientRect();\n        var dotBounds = dot.getBoundingClientRect();\n    }\n    catch (error) {\n        console.error('Error creating dot:', error);\n        console.error('Creation error details:', {\n            savedDot: savedDot,\n            error: error instanceof Error ? error.message : 'Unknown error',\n            stack: error instanceof Error ? error.stack : undefined\n        });\n        // Fallback creation with minimum required elements\n        dot.innerHTML = \"\\n            <div class='dot'></div>\\n            <div class='connecting-line'></div>\\n            <div class='label-container'>\\n                <div class='user-dot-label'>\".concat(savedDot.label || '', \"</div>\\n                <div class='dot-coordinates'>(0.00, 0.00)</div>\\n            </div>\\n        \");\n    }\n    // Add core event listeners\n    dot.addEventListener('mousedown', _mouseEvents__WEBPACK_IMPORTED_MODULE_0__.mouseDown);\n    dot.addEventListener('mouseup', _mouseEvents__WEBPACK_IMPORTED_MODULE_0__.mouseUp);\n    dot.addEventListener('mouseover', function () {\n        if (!dot.classList.contains('editing')) {\n            adjustHoverBox(dot);\n        }\n    });\n    return dot;\n}\nvar debouncedAdjustHover = (0,_keyboardUtils__WEBPACK_IMPORTED_MODULE_6__.debounce)(function (dotContainer) {\n    if (dotContainer.hasAttribute('data-hover-width') &&\n        dotContainer.hasAttribute('data-hover-height') &&\n        !dotContainer.classList.contains('editing')) {\n        var storedWidth = dotContainer.getAttribute('data-hover-width');\n        var storedHeight = dotContainer.getAttribute('data-hover-height');\n        if (_constants__WEBPACK_IMPORTED_MODULE_3__.DEBUG) {\n            console.log('Using cached hover dimensions:', {\n                width: storedWidth,\n                height: storedHeight,\n                dotId: dotContainer.getAttribute('data-dot-id')\n            });\n        }\n        dotContainer.style.setProperty('--hover-width', storedWidth);\n        dotContainer.style.setProperty('--hover-height', storedHeight);\n        dotContainer.style.setProperty('--hover-top', '-23px');\n        dotContainer.style.setProperty('--hover-left', '-5px');\n        return;\n    }\n    var labelElement = dotContainer.querySelector('.user-dot-label');\n    var coordsElement = dotContainer.querySelector('.dot-coordinates');\n    if (!labelElement || !coordsElement)\n        return;\n    var labelRect = labelElement.getBoundingClientRect();\n    var coordsRect = coordsElement.getBoundingClientRect();\n    var totalWidth = \"\".concat(Math.max(_constants__WEBPACK_IMPORTED_MODULE_3__.DOT_BOX.MIN_WIDTH, Math.max(labelRect.width, coordsRect.width) + _constants__WEBPACK_IMPORTED_MODULE_3__.DOT_BOX.LEFT_PADDING), \"px\");\n    var totalHeight = \"\".concat(Math.max(_constants__WEBPACK_IMPORTED_MODULE_3__.DOT_BOX.MIN_HEIGHT, coordsRect.bottom - labelRect.top + 10), \"px\");\n    if (_constants__WEBPACK_IMPORTED_MODULE_3__.DEBUG) {\n        console.log('Calculating new hover dimensions:', {\n            width: totalWidth,\n            height: totalHeight,\n            dotId: dotContainer.getAttribute('data-dot-id')\n        });\n    }\n    dotContainer.setAttribute('data-hover-width', totalWidth);\n    dotContainer.setAttribute('data-hover-height', totalHeight);\n    dotContainer.style.setProperty('--hover-width', totalWidth);\n    dotContainer.style.setProperty('--hover-height', totalHeight);\n    dotContainer.style.setProperty('--hover-top', \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_3__.DOT_BOX.TOP_OFFSET, \"px\"));\n    dotContainer.style.setProperty('--hover-left', \"-\".concat(_constants__WEBPACK_IMPORTED_MODULE_3__.DOT_BOX.DOT_WIDTH / 2 + 2, \"px\"));\n}, 100); // 100ms debounce\nfunction adjustHoverBox(dotContainer) {\n    debouncedAdjustHover(dotContainer);\n}\nfunction initializeDotFromSaved(savedDot) {\n    console.log('Initializing dot from saved data:', savedDot);\n    return loadSavedDots(savedDot);\n}\nfunction waitForXYPlane() {\n    return new Promise(function (resolve) {\n        var checkXYPlane = function () {\n            var xyPlane = document.getElementById(\"xy-plane\");\n            if (xyPlane && xyPlane.getBoundingClientRect().width > 0) {\n                resolve();\n            }\n            else {\n                setTimeout(checkXYPlane, 50);\n            }\n        };\n        checkXYPlane();\n    });\n}\nfunction handleContextMenu(event) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('dot.contextmenu');\n    event.preventDefault();\n    _data__WEBPACK_IMPORTED_MODULE_1__.tpf.currentDot = null;\n}\nfunction findDotContainer(element) {\n    if (element.classList.contains('dot-container')) {\n        return element;\n    }\n    if (element.parentElement) {\n        return findDotContainer(element.parentElement);\n    }\n    return null;\n}\nfunction dotsLoad() {\n    return __awaiter(this, void 0, void 0, function () {\n        var MAX_RETRIES, retryCount, _loop_1, state_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    MAX_RETRIES = 3;\n                    retryCount = 0;\n                    _loop_1 = function () {\n                        var urlParts, urlId, response, data, dots, xyPlane_1, existingDots, error_1;\n                        return __generator(this, function (_b) {\n                            switch (_b.label) {\n                                case 0:\n                                    _b.trys.push([0, 3, , 5]);\n                                    urlParts = window.location.pathname.split('/');\n                                    if (urlParts.length <= 2 || urlParts[1] === '') {\n                                        (0,_util_log__WEBPACK_IMPORTED_MODULE_2__[\"default\"])('Homepage detected - skipping load', 'dots');\n                                        return [2 /*return*/, { value: void 0 }];\n                                    }\n                                    urlId = urlParts[urlParts.length - 1];\n                                    console.log('Loading dots for URL ID:', urlId);\n                                    return [4 /*yield*/, fetch(\"/api/pages/\".concat(urlId, \"/dots\"), {\n                                            method: 'GET',\n                                            headers: {\n                                                'Accept': 'application/json',\n                                                'Content-Type': 'application/json',\n                                            },\n                                            credentials: 'same-origin'\n                                        })];\n                                case 1:\n                                    response = _b.sent();\n                                    if (!response.ok) {\n                                        throw new Error(\"Failed to load dots: \".concat(response.status));\n                                    }\n                                    return [4 /*yield*/, response.json()];\n                                case 2:\n                                    data = _b.sent();\n                                    dots = Array.isArray(data) ? data : (data.dots || []);\n                                    console.log('Processed dots array from server:', JSON.stringify(dots, null, 2));\n                                    xyPlane_1 = document.getElementById('xy-plane');\n                                    if (!xyPlane_1) {\n                                        throw new Error('XY Plane not found');\n                                    }\n                                    existingDots = xyPlane_1.getElementsByClassName('dot-container');\n                                    Array.from(existingDots).forEach(function (dot) { return dot.remove(); });\n                                    dots.forEach(function (dot) {\n                                        try {\n                                            // Process incoming dot data\n                                            var processedDot = __assign(__assign({}, dot), { x: dot.x.includes('px') ? dot.x : \"\".concat(dot.x, \"px\"), y: dot.y.includes('px') ? dot.y : \"\".concat(dot.y, \"px\"), coordinates: dot.coordinates, label: dot.label, labelOffset: dot.labelOffset || { x: 50, y: -50 }, lineLength: dot.lineLength || 70.71067811865476 });\n                                            var dotElement = initializeDotFromSaved(processedDot);\n                                            xyPlane_1.appendChild(dotElement);\n                                            // Verify dot creation\n                                            var labelContainer = dotElement.querySelector('.label-container');\n                                            // Validate created elements\n                                            var validation = {\n                                                hasLabel: !!dotElement.querySelector('.user-dot-label'),\n                                                hasCoords: !!dotElement.querySelector('.dot-coordinates'),\n                                                hasLine: !!dotElement.querySelector('.connecting-line')\n                                            };\n                                            if (!validation.hasLabel || !validation.hasCoords || !validation.hasLine) {\n                                                console.warn('Dot missing required elements:', validation);\n                                            }\n                                            // Check position values\n                                            var position = {\n                                                left: dotElement.style.left,\n                                                top: dotElement.style.top\n                                            };\n                                            if (!position.left || !position.top) {\n                                                console.warn('Invalid dot position:', position);\n                                            }\n                                        }\n                                        catch (error) {\n                                            console.error('Error creating individual dot:', error);\n                                            console.error('Failed dot data:', dot);\n                                            if (error instanceof Error) {\n                                                console.error('Creation error details:', {\n                                                    message: error.message,\n                                                    stack: error.stack\n                                                });\n                                            }\n                                        }\n                                    });\n                                    return [2 /*return*/, { value: void 0 }];\n                                case 3:\n                                    error_1 = _b.sent();\n                                    console.error(\"Attempt \".concat(retryCount + 1, \" failed:\"), error_1);\n                                    retryCount++;\n                                    if (retryCount === MAX_RETRIES) {\n                                        console.error('Failed to load dots after maximum retries');\n                                        return [2 /*return*/, { value: void 0 }];\n                                    }\n                                    return [4 /*yield*/, new Promise(function (resolve) { return setTimeout(resolve, Math.pow(2, retryCount) * 1000); })];\n                                case 4:\n                                    _b.sent();\n                                    return [3 /*break*/, 5];\n                                case 5: return [2 /*return*/];\n                            }\n                        });\n                    };\n                    _a.label = 1;\n                case 1:\n                    if (!(retryCount < MAX_RETRIES)) return [3 /*break*/, 3];\n                    return [5 /*yield**/, _loop_1()];\n                case 2:\n                    state_1 = _a.sent();\n                    if (typeof state_1 === \"object\")\n                        return [2 /*return*/, state_1.value];\n                    return [3 /*break*/, 1];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/dotsLoad.ts?");

/***/ }),

/***/ "./src/public/ts/dotsSave.ts":
/*!***********************************!*\
  !*** ./src/public/ts/dotsSave.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   autosaveDots: () => (/* binding */ autosaveDots),\n/* harmony export */   dotsSave: () => (/* binding */ dotsSave),\n/* harmony export */   getCurrentDots: () => (/* binding */ getCurrentDots)\n/* harmony export */ });\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\nfunction collectDots() {\n    var dots = [];\n    var dotContainers = document.querySelectorAll('.dot-container');\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('Found dot containers');\n    console.log('Found dot containers:', dotContainers.length);\n    console.log('Starting dot collection process');\n    dotContainers.forEach(function (container) {\n        try {\n            var dotEl = container;\n            var labelEl = dotEl.querySelector('.user-dot-label');\n            var coordsEl = dotEl.querySelector('.dot-coordinates');\n            var labelContainer = dotEl.querySelector('.label-container');\n            var line = dotEl.querySelector('.connecting-line');\n            console.log('Collecting dot state:', {\n                id: dotEl.getAttribute('data-dot-id'),\n                position: {\n                    left: dotEl.style.left,\n                    top: dotEl.style.top\n                },\n                elements: {\n                    labelContainer: !!labelContainer,\n                    line: !!line,\n                    coordsEl: !!coordsEl\n                }\n            });\n            var computedStyle = window.getComputedStyle(dotEl);\n            var left = dotEl.style.left || computedStyle.left;\n            var top_1 = dotEl.style.top || computedStyle.top;\n            if (!left || !top_1 || left === 'auto' || top_1 === 'auto') {\n                console.warn('Invalid position for dot:', { left: left, top: top_1 });\n                return;\n            }\n            console.log('Processing label container:', {\n                exists: !!labelContainer,\n                element: labelContainer,\n                parentNode: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.parentNode\n            });\n            var defaultLabelOffset = {\n                x: _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH,\n                y: -_constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH / Math.sqrt(2)\n            };\n            var labelOffset = __assign({}, defaultLabelOffset);\n            var lineAngle = -45;\n            if (labelContainer && line) {\n                var leftValue = parseFloat(labelContainer.style.left);\n                var topValue = parseFloat(labelContainer.style.top);\n                if (!isNaN(leftValue)) {\n                    labelOffset.x = leftValue;\n                    console.log('Valid left offset:', leftValue);\n                }\n                else {\n                    console.warn('Invalid left offset, using default:', _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH);\n                }\n                if (!isNaN(topValue)) {\n                    labelOffset.y = topValue;\n                    console.log('Valid top offset:', topValue);\n                }\n                else {\n                    console.warn('Invalid top offset, using default:', -_constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH / Math.sqrt(2));\n                }\n                var transform = line.style.transform;\n                var angleMatch = transform.match(/rotate\\(([-\\d.]+)deg\\)/);\n                if (angleMatch) {\n                    var parsedAngle = parseFloat(angleMatch[1]);\n                    if (!isNaN(parsedAngle)) {\n                        lineAngle = parsedAngle;\n                        console.log('Extracted line angle:', lineAngle);\n                    }\n                }\n                else {\n                    console.warn('Could not extract line angle, using default:', lineAngle);\n                }\n            }\n            console.log('Label container position details:', {\n                element: labelContainer,\n                leftStyle: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.left,\n                topStyle: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.top,\n                computedOffset: labelOffset,\n                rawLeft: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.left,\n                rawTop: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.top,\n                lineAngle: lineAngle\n            });\n            var lineLength = parseFloat(dotEl.getAttribute('data-line-length') || '');\n            if (isNaN(lineLength)) {\n                lineLength = Math.sqrt(labelOffset.x * labelOffset.x + labelOffset.y * labelOffset.y);\n                console.log('Calculated line length from offset:', lineLength);\n            }\n            else {\n                console.log('Using stored line length:', lineLength);\n            }\n            console.log('Line length calculation details:', {\n                dataAttribute: dotEl.getAttribute('data-line-length'),\n                calculated: Math.sqrt(labelOffset.x * labelOffset.x + labelOffset.y * labelOffset.y),\n                final: lineLength,\n                isValid: !isNaN(lineLength),\n                angle: lineAngle,\n                transform: line === null || line === void 0 ? void 0 : line.style.transform\n            });\n            var dotData = {\n                x: left,\n                y: top_1,\n                coordinates: (coordsEl === null || coordsEl === void 0 ? void 0 : coordsEl.textContent) || '',\n                label: (labelEl === null || labelEl === void 0 ? void 0 : labelEl.textContent) || 'null',\n                labelOffset: labelOffset,\n                lineLength: lineLength,\n                lineAngle: lineAngle\n            };\n            var validationIssues = [];\n            if (!dotData.coordinates)\n                validationIssues.push('missing coordinates');\n            if (!dotData.x)\n                validationIssues.push('missing x position');\n            if (!dotData.y)\n                validationIssues.push('missing y position');\n            if (dotData.lineLength !== undefined && isNaN(dotData.lineLength)) {\n                validationIssues.push('invalid line length');\n            }\n            if (dotData.lineAngle !== undefined && isNaN(dotData.lineAngle)) {\n                validationIssues.push('invalid line angle');\n            }\n            if (!labelOffset || isNaN(labelOffset.x) || isNaN(labelOffset.y)) {\n                validationIssues.push('invalid label offset');\n            }\n            if (validationIssues.length > 0) {\n                console.warn('Dot validation issues:', {\n                    dot: dotData,\n                    issues: validationIssues,\n                    rawValues: {\n                        labelOffset: labelOffset,\n                        lineLength: lineLength,\n                        lineAngle: lineAngle,\n                        transform: line === null || line === void 0 ? void 0 : line.style.transform\n                    }\n                });\n            }\n            console.log('Complete dot data for saving:', {\n                dotData: dotData,\n                validationIssues: validationIssues,\n                isValid: validationIssues.length === 0,\n                elementDetails: {\n                    hasLabel: !!labelEl,\n                    hasCoords: !!coordsEl,\n                    hasContainer: !!labelContainer,\n                    hasLine: !!line\n                },\n                styles: {\n                    transform: line === null || line === void 0 ? void 0 : line.style.transform,\n                    labelLeft: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.left,\n                    labelTop: labelContainer === null || labelContainer === void 0 ? void 0 : labelContainer.style.top\n                }\n            });\n            dots.push(dotData);\n        }\n        catch (error) {\n            console.error('Error processing dot container:', error);\n            if (error instanceof Error) {\n                console.error('Error details:', {\n                    message: error.message,\n                    stack: error.stack,\n                    type: error.name,\n                    container: container,\n                    containerHTML: container.innerHTML\n                });\n            }\n        }\n    });\n    console.log('Collection complete:', {\n        totalDots: dots.length,\n        dotsWithLabels: dots.filter(function (d) { return d.label !== 'null'; }).length,\n        dotsWithOffsets: dots.filter(function (d) { return d.labelOffset !== undefined; }).length,\n        dotsWithAngles: dots.filter(function (d) { return d.lineAngle !== undefined; }).length,\n        validDots: dots.filter(function (d) { return d.labelOffset && !isNaN(d.labelOffset.x) && !isNaN(d.labelOffset.y); }).length\n    });\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('Collection complete');\n    return dots;\n}\nfunction dotsSave(dots) {\n    return __awaiter(this, void 0, void 0, function () {\n        var urlParts, urlId, dotsToSave, processedDots, response, errorText, result, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('saveDots');\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 6, , 7]);\n                    urlParts = window.location.pathname.split('/');\n                    if (urlParts.length <= 2 || urlParts[1] === '') {\n                        console.log('Skipping save - on homepage');\n                        return [2 /*return*/];\n                    }\n                    urlId = urlParts[urlParts.length - 1];\n                    dotsToSave = dots.length === 0 ? collectDots() : dots;\n                    console.log('Pre-save state:', JSON.stringify(dotsToSave, null, 2));\n                    if (dotsToSave.length === 0) {\n                        console.log('No dots to save');\n                        return [2 /*return*/];\n                    }\n                    processedDots = dotsToSave.map(function (dot) {\n                        var _a, _b;\n                        // Remove 'px' suffix and convert to numbers\n                        var x = dot.x ? parseFloat(dot.x.replace('px', '')) : 0;\n                        var y = dot.y ? parseFloat(dot.y.replace('px', '')) : 0;\n                        // Extract grid coordinates for validation\n                        var coordMatch = dot.coordinates.match(/\\(([-\\d.]+),\\s*([-\\d.]+)\\)/);\n                        var gridX = coordMatch ? parseFloat(coordMatch[1]) : 0;\n                        var gridY = coordMatch ? parseFloat(coordMatch[2]) : 0;\n                        if (isNaN(x) || isNaN(y) || isNaN(gridX) || isNaN(gridY)) {\n                            console.warn('Invalid coordinate values:', {\n                                x: x,\n                                y: y,\n                                gridX: gridX,\n                                gridY: gridY,\n                                raw: { x: dot.x, y: dot.y, coordinates: dot.coordinates }\n                            });\n                        }\n                        // Default label offset if not provided\n                        var labelOffset = {\n                            x: ((_a = dot.labelOffset) === null || _a === void 0 ? void 0 : _a.x) || _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH,\n                            y: ((_b = dot.labelOffset) === null || _b === void 0 ? void 0 : _b.y) || -_constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.DEFAULT_LENGTH\n                        };\n                        // Validate line length\n                        var lineLength = dot.lineLength;\n                        if (!lineLength || isNaN(lineLength)) {\n                            lineLength = Math.sqrt(Math.pow(labelOffset.x, 2) +\n                                Math.pow(labelOffset.y, 2));\n                            console.log('Calculated missing line length:', lineLength);\n                        }\n                        // Log validation details\n                        console.log('Processing dot:', {\n                            originalState: dot,\n                            processedValues: {\n                                x: x,\n                                y: y,\n                                gridCoords: { x: gridX, y: gridY },\n                                labelOffset: labelOffset,\n                                lineLength: lineLength\n                            }\n                        });\n                        return {\n                            x: String(x),\n                            y: String(y),\n                            coordinates: dot.coordinates,\n                            label: dot.label || '',\n                            labelOffset: labelOffset,\n                            lineLength: lineLength\n                        };\n                    });\n                    console.log('Sending dots to API:', JSON.stringify(processedDots));\n                    console.log('Pre-save state:', JSON.stringify(processedDots, null, 2));\n                    return [4 /*yield*/, fetch(\"/api/pages/\".concat(urlId, \"/dots\"), {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({ dots: processedDots }),\n                            credentials: 'same-origin'\n                        })];\n                case 2:\n                    response = _a.sent();\n                    if (!!response.ok) return [3 /*break*/, 4];\n                    return [4 /*yield*/, response.text()];\n                case 3:\n                    errorText = _a.sent();\n                    console.error('Server error details:', {\n                        status: response.status,\n                        statusText: response.statusText,\n                        responseBody: errorText,\n                        sentData: processedDots\n                    });\n                    throw new Error(\"Failed to save dots: \".concat(response.status, \" \").concat(response.statusText));\n                case 4: return [4 /*yield*/, response.json()];\n                case 5:\n                    result = _a.sent();\n                    console.log('Save successful:', JSON.stringify(result, null, 2));\n                    return [2 /*return*/, result];\n                case 6:\n                    error_1 = _a.sent();\n                    console.error('Save error:', error_1);\n                    if (error_1 instanceof Error) {\n                        console.error('Error details:', {\n                            message: error_1.message,\n                            stack: error_1.stack,\n                            type: error_1.name\n                        });\n                    }\n                    throw error_1;\n                case 7: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction autosaveDots() {\n    return __awaiter(this, void 0, void 0, function () {\n        var dots, error_2;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    dots = collectDots();\n                    return [4 /*yield*/, dotsSave(dots)];\n                case 1:\n                    _a.sent();\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_2 = _a.sent();\n                    console.error('Error in autosave:', error_2);\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getCurrentDots() {\n    return collectDots();\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/dotsSave.ts?");

/***/ }),

/***/ "./src/public/ts/editDeleteMenu.ts":
/*!*****************************************!*\
  !*** ./src/public/ts/editDeleteMenu.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   editDeleteMenu: () => (/* binding */ editDeleteMenu),\n/* harmony export */   findDotContainer: () => (/* binding */ findDotContainer),\n/* harmony export */   handleEdit: () => (/* binding */ handleEdit),\n/* harmony export */   updateCoordinatePrecision: () => (/* binding */ updateCoordinatePrecision)\n/* harmony export */ });\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/public/ts/data.ts\");\n/* harmony import */ var _dotsSave__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dotsSave */ \"./src/public/ts/dotsSave.ts\");\n\n\n\nfunction adjustHoverBox(dotContainer) {\n    var labelElement = dotContainer.querySelector('.user-dot-label');\n    var coordsElement = dotContainer.querySelector('.dot-coordinates');\n    if (!labelElement || !coordsElement)\n        return;\n    var labelRect = labelElement.getBoundingClientRect();\n    var coordsRect = coordsElement.getBoundingClientRect();\n    dotContainer.style.setProperty('--hover-top', '-13px');\n    dotContainer.style.setProperty('--hover-width', \"\".concat(Math.max(labelRect.width, coordsRect.width) + 20, \"px\"));\n    dotContainer.style.setProperty('--hover-height', \"\".concat(coordsRect.bottom - labelRect.top + 7, \"px\"));\n}\nfunction handleEdit(dotContainer) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('handleEdit');\n    var labelElement = dotContainer.querySelector('.user-dot-label');\n    if (!labelElement)\n        return;\n    var input = document.createElement('input');\n    input.type = 'text';\n    input.className = 'label-input';\n    input.value = labelElement.innerText === 'null' ? '' : labelElement.innerText;\n    var labelRect = labelElement.getBoundingClientRect();\n    var containerRect = dotContainer.getBoundingClientRect();\n    input.style.top = (labelRect.top - containerRect.top) + 'px';\n    input.style.left = (labelRect.left - containerRect.left) + 'px';\n    var isFinishing = false;\n    var isEscPressed = false;\n    labelElement.style.visibility = 'hidden';\n    function finishEdit() {\n        if (isFinishing || isEscPressed)\n            return;\n        isFinishing = true;\n        try {\n            var newLabel = input.value || 'null';\n            labelElement.innerText = newLabel;\n            labelElement.style.visibility = 'visible';\n            if (input.parentNode === dotContainer) {\n                dotContainer.removeChild(input);\n            }\n            if (_data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot && _data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot !== dotContainer) {\n                _data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot.classList.remove('selected');\n                updateCoordinatePrecision(_data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot, false);\n            }\n            _data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot = dotContainer;\n            dotContainer.classList.add('selected');\n            updateCoordinatePrecision(dotContainer, true);\n            // Only save if we're not on homepage\n            var urlParts = window.location.pathname.split('/');\n            if (urlParts.length > 2 && urlParts[1] !== '') {\n                requestAnimationFrame(function () {\n                    saveDots();\n                });\n            }\n        }\n        catch (error) {\n            console.error('Error in finishEdit:', error);\n            labelElement.style.visibility = 'visible';\n        }\n        finally {\n            isFinishing = false;\n        }\n    }\n    input.addEventListener('blur', function () {\n        if (!isEscPressed) {\n            requestAnimationFrame(function () {\n                finishEdit();\n            });\n        }\n    });\n    input.addEventListener('keydown', function (e) {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            if (!isFinishing) {\n                finishEdit();\n            }\n        }\n        else if (e.key === 'Escape') {\n            e.preventDefault();\n            isEscPressed = true;\n            if (input.parentNode === dotContainer) {\n                dotContainer.removeChild(input);\n            }\n            labelElement.style.visibility = 'visible';\n        }\n    });\n    dotContainer.appendChild(input);\n    input.focus();\n    input.select();\n}\nfunction editDeleteMenu(dot) {\n    var menu = document.createElement('div');\n    menu.className = 'edit-menu';\n    menu.style.position = 'absolute';\n    var deleteDots = function () {\n        // Create a Set to handle unique dots to delete\n        var dotsToDelete = new Set();\n        // Add all multi-selected dots\n        document.querySelectorAll('.dot-container.multi-selected').forEach(function (d) { return dotsToDelete.add(d); });\n        // Add any single-selected dots\n        document.querySelectorAll('.dot-container.selected').forEach(function (d) { return dotsToDelete.add(d); });\n        // Add the right-clicked dot if not already included\n        dotsToDelete.add(dot);\n        // If we have dots to delete, process them\n        if (dotsToDelete.size > 0) {\n            dotsToDelete.forEach(function (dotElement) {\n                var dotId = dotElement.getAttribute('data-dot-id');\n                if (dotId) {\n                    var previousState = (0,_data__WEBPACK_IMPORTED_MODULE_1__.recordDotState)(dotElement);\n                    dotElement.remove();\n                    (0,_data__WEBPACK_IMPORTED_MODULE_1__.addToUndoHistory)({\n                        type: 'delete',\n                        dotId: dotId,\n                        previousState: previousState,\n                        newState: undefined\n                    });\n                }\n            });\n        }\n        // Clean up menu\n        menu.remove();\n        // Clear selection tracking\n        _data__WEBPACK_IMPORTED_MODULE_1__.tpf.selectedDot = null;\n        // Trigger autosave\n        var urlParts = window.location.pathname.split('/');\n        if (urlParts.length > 2 && urlParts[1] !== '') {\n            (0,_dotsSave__WEBPACK_IMPORTED_MODULE_2__.autosaveDots)();\n        }\n    };\n    menu.innerHTML = \"\\n        <div class=\\\"delete\\\">Delete</div>\\n    \";\n    // Position menu near the cursor\n    var rect = dot.getBoundingClientRect();\n    menu.style.left = rect.left + 'px';\n    menu.style.top = rect.bottom + 'px';\n    // Add click handlers\n    var deleteButton = menu.querySelector('.delete');\n    if (deleteButton) {\n        deleteButton.addEventListener('click', deleteDots);\n    }\n    // Add menu to document\n    document.body.appendChild(menu);\n    // Remove menu when clicking outside\n    var removeMenu = function (e) {\n        if (!menu.contains(e.target)) {\n            menu.remove();\n            document.removeEventListener('click', removeMenu);\n        }\n    };\n    // Delay adding click listener to prevent immediate removal\n    setTimeout(function () {\n        document.addEventListener('click', removeMenu);\n    }, 0);\n}\nfunction updateCoordinatePrecision(dot, highPrecision) {\n    var _a, _b;\n    var coordsElement = dot.querySelector('.dot-coordinates');\n    if (!coordsElement)\n        return;\n    var coords = ((_b = (_a = coordsElement.textContent) === null || _a === void 0 ? void 0 : _a.match(/-?\\d+\\.?\\d*/g)) === null || _b === void 0 ? void 0 : _b.map(Number)) || [0, 0];\n    coordsElement.textContent = \"(\".concat(coords[0].toFixed(highPrecision ? 2 : 1), \", \").concat(coords[1].toFixed(highPrecision ? 2 : 1), \")\");\n}\nfunction findDotContainer(element) {\n    if (element.classList.contains('dot-container')) {\n        return element;\n    }\n    if (element.parentElement) {\n        return findDotContainer(element.parentElement);\n    }\n    return null;\n}\nfunction saveDots() {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('saveDots');\n    var dots = Array.from(document.getElementsByClassName('dot-container')).map(function (dot) {\n        var labelElement = dot.querySelector('.user-dot-label');\n        var coordsElement = dot.querySelector('.dot-coordinates');\n        var style = dot.style;\n        return {\n            x: style.left,\n            y: style.top,\n            coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n            label: (labelElement === null || labelElement === void 0 ? void 0 : labelElement.textContent) || 'null'\n        };\n    });\n    (0,_dotsSave__WEBPACK_IMPORTED_MODULE_2__.dotsSave)(dots);\n}\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/editDeleteMenu.ts?");

/***/ }),

/***/ "./src/public/ts/errorTracker.ts":
/*!***************************************!*\
  !*** ./src/public/ts/errorTracker.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initErrorTracker: () => (/* binding */ initErrorTracker)\n/* harmony export */ });\nfunction initErrorTracker() {\n    window.onerror = function (msg, url, lineNo, columnNo, error) {\n        var errorDiv = document.createElement('div');\n        errorDiv.style.cssText = \"\\n            position: fixed;\\n            bottom: 20px;\\n            right: 20px;\\n            max-width: 500px;\\n            background: white;\\n            border: 2px solid red;\\n            padding: 15px;\\n            border-radius: 5px;\\n            z-index: 9999;\\n            font-family: monospace;\\n            font-size: 12px;\\n        \";\n        errorDiv.innerHTML = \"\\n            <strong>Error:</strong> \".concat(msg, \"<br>\\n            <strong>File:</strong> \").concat(url, \"<br>\\n            <strong>Line:</strong> \").concat(lineNo, \", Column: \").concat(columnNo, \"<br>\\n            \").concat((error === null || error === void 0 ? void 0 : error.stack) ? \"<strong>Stack:</strong><br>\".concat(error.stack.replace(/\\n/g, '<br>')) : '', \"\\n        \");\n        document.body.appendChild(errorDiv);\n        // Remove after 10 seconds\n        setTimeout(function () { return errorDiv.remove(); }, 10000);\n        return false;\n    };\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/errorTracker.ts?");

/***/ }),

/***/ "./src/public/ts/index.ts":
/*!********************************!*\
  !*** ./src/public/ts/index.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanup: () => (/* binding */ cleanup),\n/* harmony export */   coordinateToPixel: () => (/* reexport safe */ _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.coordinateToPixel),\n/* harmony export */   createTickMarks: () => (/* reexport safe */ _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.createTickMarks),\n/* harmony export */   dotsCreate: () => (/* reexport safe */ _dotsCreate__WEBPACK_IMPORTED_MODULE_2__.dotsCreate),\n/* harmony export */   dotsLoad: () => (/* reexport safe */ _dotsLoad__WEBPACK_IMPORTED_MODULE_3__.dotsLoad),\n/* harmony export */   dotsSave: () => (/* reexport safe */ _dotsSave__WEBPACK_IMPORTED_MODULE_4__.dotsSave),\n/* harmony export */   log: () => (/* reexport safe */ _util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   mouseDown: () => (/* reexport safe */ _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseDown),\n/* harmony export */   mouseMove: () => (/* reexport safe */ _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseMove),\n/* harmony export */   mouseUp: () => (/* reexport safe */ _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseUp),\n/* harmony export */   pixelToCoordinate: () => (/* reexport safe */ _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.pixelToCoordinate),\n/* harmony export */   removeAnyExistingElementsWithClassName: () => (/* reexport safe */ _removeAnyExistingElementsWithClassName__WEBPACK_IMPORTED_MODULE_6__.removeAnyExistingElementsWithClassName)\n/* harmony export */ });\n/* harmony import */ var _createTickMarks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createTickMarks */ \"./src/public/ts/createTickMarks.ts\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./data */ \"./src/public/ts/data.ts\");\n/* harmony import */ var _dotsCreate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dotsCreate */ \"./src/public/ts/dotsCreate.ts\");\n/* harmony import */ var _dotsLoad__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dotsLoad */ \"./src/public/ts/dotsLoad.ts\");\n/* harmony import */ var _dotsSave__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./dotsSave */ \"./src/public/ts/dotsSave.ts\");\n/* harmony import */ var _mouseEvents__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./mouseEvents */ \"./src/public/ts/mouseEvents.ts\");\n/* harmony import */ var _removeAnyExistingElementsWithClassName__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./removeAnyExistingElementsWithClassName */ \"./src/public/ts/removeAnyExistingElementsWithClassName.ts\");\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _errorTracker__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errorTracker */ \"./src/public/ts/errorTracker.ts\");\n/* harmony import */ var _navScroll__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./navScroll */ \"./src/public/ts/navScroll.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\n\n// Export everything that needs to be globally available\nwindow.createTickMarks = _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.createTickMarks;\nwindow.pixelToCoordinate = _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.pixelToCoordinate;\nwindow.coordinateToPixel = _createTickMarks__WEBPACK_IMPORTED_MODULE_0__.coordinateToPixel;\nwindow.dotsCreate = _dotsCreate__WEBPACK_IMPORTED_MODULE_2__.dotsCreate;\nwindow.dotsLoad = _dotsLoad__WEBPACK_IMPORTED_MODULE_3__.dotsLoad;\nwindow.dotsSave = _dotsSave__WEBPACK_IMPORTED_MODULE_4__.dotsSave;\nwindow.mouseDown = _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseDown;\nwindow.mouseUp = _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseUp;\nwindow.mouseMove = _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseMove;\nwindow.removeAnyExistingElementsWithClassName = _removeAnyExistingElementsWithClassName__WEBPACK_IMPORTED_MODULE_6__.removeAnyExistingElementsWithClassName;\nwindow.log = _util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"];\nwindow.tpf = _data__WEBPACK_IMPORTED_MODULE_1__.tpf;\n// Initialize grid when the document loads\ndocument.addEventListener('DOMContentLoaded', function () {\n    (0,_errorTracker__WEBPACK_IMPORTED_MODULE_8__.initErrorTracker)();\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('Document loaded, initializing grid...');\n    // Initialize grid\n    var xyPlane = document.getElementById('xy-plane');\n    if (xyPlane) {\n        (0,_util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('Found xy-plane, creating tick marks...');\n        try {\n            // Create the tick marks first\n            (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_0__.createTickMarks)(xyPlane);\n            (0,_util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('Tick marks created successfully');\n            // Then initialize dots functionality\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_2__.dotsCreate)();\n            (0,_util_log__WEBPACK_IMPORTED_MODULE_7__[\"default\"])('Dots functionality initialized');\n            // Add mouse event listeners\n            xyPlane.addEventListener('mousedown', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseDown);\n            window.addEventListener('mouseup', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseUp);\n            window.addEventListener('mousemove', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseMove);\n            // Prevent default context menu\n            xyPlane.addEventListener('contextmenu', function (e) {\n                e.preventDefault();\n            });\n            // Add event listeners for label input\n            var labelInputs = document.querySelectorAll('.label-input');\n            labelInputs.forEach(function (labelInput) {\n                labelInput.addEventListener('focus', function () {\n                    var dotContainer = labelInput.closest('.dot-container');\n                    if (dotContainer) {\n                        dotContainer.classList.add('editing');\n                    }\n                });\n                labelInput.addEventListener('blur', function () {\n                    var dotContainer = labelInput.closest('.dot-container');\n                    if (dotContainer) {\n                        dotContainer.classList.remove('editing');\n                    }\n                });\n                labelInput.addEventListener('keydown', function (event) {\n                    var keyboardEvent = event;\n                    var key = keyboardEvent.key;\n                    if (key === 'Enter') {\n                        var dotContainer = labelInput.closest('.dot-container');\n                        if (dotContainer) {\n                            dotContainer.classList.add('selected');\n                        }\n                    }\n                });\n            });\n        }\n        catch (error) {\n            console.error('Error initializing grid:', error);\n        }\n    }\n    else {\n        console.error('Could not find xy-plane element');\n    }\n    // Handle form submission\n    var savePageForm = document.getElementById('savePageForm');\n    if (savePageForm) {\n        savePageForm.addEventListener('submit', function (e) {\n            return __awaiter(this, void 0, void 0, function () {\n                var pageName, dots, response, errorData, result, error_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            e.preventDefault();\n                            pageName = document.getElementById('pageName');\n                            if (!pageName.value) {\n                                alert('Please enter a page name');\n                                return [2 /*return*/];\n                            }\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 6, , 7]);\n                            dots = Array.from(document.getElementsByClassName('dot-container')).map(function (dotEl) {\n                                var labelEl = dotEl.querySelector('.user-dot-label');\n                                var coordsElement = dotEl.querySelector('.dot-coordinates');\n                                return {\n                                    x: dotEl.style.left,\n                                    y: dotEl.style.top,\n                                    coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n                                    label: (labelEl === null || labelEl === void 0 ? void 0 : labelEl.textContent) || 'null'\n                                };\n                            });\n                            return [4 /*yield*/, fetch('/api/pages/save', {\n                                    method: 'POST',\n                                    headers: {\n                                        'Content-Type': 'application/json'\n                                    },\n                                    body: JSON.stringify({\n                                        title: pageName.value,\n                                        content: pageName.value,\n                                        dots: dots\n                                    })\n                                })];\n                        case 2:\n                            response = _a.sent();\n                            if (!!response.ok) return [3 /*break*/, 4];\n                            return [4 /*yield*/, response.json()];\n                        case 3:\n                            errorData = _a.sent();\n                            throw new Error(errorData.error || 'Failed to save page');\n                        case 4: return [4 /*yield*/, response.json()];\n                        case 5:\n                            result = _a.sent();\n                            console.log('Page saved successfully:', result);\n                            window.location.href = '/dashboard';\n                            return [3 /*break*/, 7];\n                        case 6:\n                            error_1 = _a.sent();\n                            console.error('Error saving page:', error_1);\n                            if (error_1 instanceof Error) {\n                                alert(\"Error saving page: \".concat(error_1.message));\n                            }\n                            else {\n                                alert('Error saving page. Please try again.');\n                            }\n                            return [3 /*break*/, 7];\n                        case 7: return [2 /*return*/];\n                    }\n                });\n            });\n        });\n    }\n    // Initialize any saved dots if they exist\n    try {\n        // Only try to load dots if we're not on the homepage\n        var urlParts = window.location.pathname.split('/');\n        if (urlParts.length > 2 && urlParts[1] !== '') {\n            (0,_dotsLoad__WEBPACK_IMPORTED_MODULE_3__.dotsLoad)();\n        }\n    }\n    catch (error) {\n        var urlParts = window.location.pathname.split('/');\n        if (urlParts.length > 2 && urlParts[1] !== '') {\n            console.error('Error loading saved dots:', error);\n        }\n    }\n});\n// Clean up function to remove event listeners when needed\nfunction cleanup() {\n    var xyPlane = document.getElementById('xy-plane');\n    if (xyPlane) {\n        xyPlane.removeEventListener('mousedown', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseDown);\n        window.removeEventListener('mouseup', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseUp);\n        window.removeEventListener('mousemove', _mouseEvents__WEBPACK_IMPORTED_MODULE_5__.mouseMove);\n    }\n}\n// Export functions for use in other modules if needed\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/index.ts?");

/***/ }),

/***/ "./src/public/ts/keyboardUtils.ts":
/*!****************************************!*\
  !*** ./src/public/ts/keyboardUtils.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   throttle: () => (/* binding */ throttle)\n/* harmony export */ });\n// Throttle function to limit rate of updates\nfunction throttle(func, limit) {\n    var inThrottle;\n    var lastFunc;\n    var lastRan;\n    return function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!inThrottle) {\n            func.apply(this, args);\n            lastRan = Date.now();\n            inThrottle = true;\n        }\n        else {\n            clearTimeout(lastFunc);\n            lastFunc = setTimeout(function () {\n                if ((Date.now() - lastRan) >= limit) {\n                    func.apply(_this, args);\n                    lastRan = Date.now();\n                }\n            }, limit - (Date.now() - lastRan));\n        }\n    };\n}\n// Debounce function to delay execution\nfunction debounce(func, wait) {\n    var timeout;\n    return function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var later = function () {\n            clearTimeout(timeout);\n            func.apply(_this, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/keyboardUtils.ts?");

/***/ }),

/***/ "./src/public/ts/mouseEvents.ts":
/*!**************************************!*\
  !*** ./src/public/ts/mouseEvents.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adjustHoverBox: () => (/* reexport safe */ _dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox),\n/* harmony export */   autosaveDots: () => (/* binding */ autosaveDots),\n/* harmony export */   debounce: () => (/* reexport safe */ _keyboardUtils__WEBPACK_IMPORTED_MODULE_7__.debounce),\n/* harmony export */   getAbsolutePosition: () => (/* binding */ getAbsolutePosition),\n/* harmony export */   handleKeyboardDelete: () => (/* binding */ handleKeyboardDelete),\n/* harmony export */   handleKeyboardMovement: () => (/* binding */ handleKeyboardMovement),\n/* harmony export */   isSelecting: () => (/* binding */ isSelecting),\n/* harmony export */   mouseDown: () => (/* binding */ mouseDown),\n/* harmony export */   mouseMove: () => (/* binding */ mouseMove),\n/* harmony export */   mouseUp: () => (/* binding */ mouseUp),\n/* harmony export */   startLabelBoxDrag: () => (/* binding */ startLabelBoxDrag),\n/* harmony export */   throttle: () => (/* reexport safe */ _keyboardUtils__WEBPACK_IMPORTED_MODULE_7__.throttle),\n/* harmony export */   tpf: () => (/* reexport safe */ _data__WEBPACK_IMPORTED_MODULE_0__.tpf),\n/* harmony export */   updateDotCoordinates: () => (/* binding */ updateDotCoordinates)\n/* harmony export */ });\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data */ \"./src/public/ts/data.ts\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\n/* harmony import */ var _createTickMarks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createTickMarks */ \"./src/public/ts/createTickMarks.ts\");\n/* harmony import */ var _dotsSave__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dotsSave */ \"./src/public/ts/dotsSave.ts\");\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n/* harmony import */ var _dotsCreate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./dotsCreate */ \"./src/public/ts/dotsCreate.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils */ \"./src/public/ts/utils.ts\");\n/* harmony import */ var _keyboardUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./keyboardUtils */ \"./src/public/ts/keyboardUtils.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\n\n\n\nfunction ensureHTMLElement(element) {\n    if (element instanceof HTMLElement) {\n        return element;\n    }\n    // Fallback: create a new HTMLElement if conversion fails\n    var htmlElement = document.createElement('div');\n    htmlElement.innerHTML = element.innerHTML;\n    return htmlElement;\n}\nfunction getAbsolutePosition(coordinate, isX) {\n    if (isX === void 0) { isX = true; }\n    return (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(isX ? coordinate : -coordinate);\n}\nfunction autosaveToServer(dots) {\n    return __awaiter(this, void 0, void 0, function () {\n        var urlParts, urlId, processedDots, response, error_1, urlParts;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    urlParts = window.location.pathname.split('/');\n                    if (urlParts.length <= 2 || urlParts[1] === '') {\n                        // Don't attempt to autosave if we're on homepage/new page\n                        return [2 /*return*/];\n                    }\n                    urlId = urlParts[urlParts.length - 1];\n                    processedDots = dots.map(function (dot) { return ({\n                        x: parseFloat(dot.x), // Remove 'px' and convert to number\n                        y: parseFloat(dot.y), // Remove 'px' and convert to number\n                        coordinates: dot.coordinates,\n                        label: dot.label\n                    }); });\n                    return [4 /*yield*/, fetch(\"/api/pages/\".concat(urlId), {\n                            method: 'PUT',\n                            headers: {\n                                'Content-Type': 'application/json',\n                            },\n                            body: JSON.stringify({\n                                dots: processedDots\n                            }),\n                            credentials: 'same-origin'\n                        })];\n                case 1:\n                    response = _a.sent();\n                    if (!response.ok) {\n                        throw new Error('Failed to auto-save page');\n                    }\n                    (0,_util_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('Page auto-saved successfully');\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_1 = _a.sent();\n                    urlParts = window.location.pathname.split('/');\n                    if (urlParts.length > 2 && urlParts[1] !== '') {\n                        console.error('Error auto-saving page:', error_1);\n                    }\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    });\n}\nfunction getAllDots() {\n    return Array.from(document.getElementsByClassName('dot-container')).map(function (dotEl) {\n        var labelElement = dotEl.querySelector('.user-dot-label');\n        var coordsElement = dotEl.querySelector('.dot-coordinates');\n        var dotElement = dotEl;\n        return {\n            x: dotElement.style.left || '0px',\n            y: dotElement.style.top || '0px',\n            coordinates: (coordsElement === null || coordsElement === void 0 ? void 0 : coordsElement.textContent) || '',\n            label: (labelElement === null || labelElement === void 0 ? void 0 : labelElement.textContent) || ''\n        };\n    });\n}\ndocument.addEventListener('keydown', function (event) {\n    console.log('handleKeyboardMovement triggered');\n    // Handle Escape key\n    if (event.key === 'Escape') {\n        var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n        selectedDots.forEach(function (dot) {\n            dot.classList.remove('selected');\n            dot.classList.remove('multi-selected');\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dot);\n        });\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n        return;\n    }\n    // Handle movement keys\n    handleKeyboardMovement(event);\n    // Handle delete key\n    handleKeyboardDelete(event);\n});\nvar dotState = {\n    originalGridX: 0,\n    originalGridY: 0,\n    totalDeltaX: 0,\n    totalDeltaY: 0,\n    currentGridX: 0,\n    currentGridY: 0,\n};\n// Create debounced log function\nvar debouncedLog = (0,_keyboardUtils__WEBPACK_IMPORTED_MODULE_7__.debounce)(function (message) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(message, 'keyboard');\n}, 100);\n// Create throttled movement function for keyboard\nvar throttledMove = (0,_keyboardUtils__WEBPACK_IMPORTED_MODULE_7__.throttle)(function (event) {\n    // Get all currently selected dots\n    var selectedDots = document.querySelectorAll('.dot-container.selected');\n    if (selectedDots.length === 0)\n        return;\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        return;\n    // Determine increment based on key combination\n    var increment;\n    if (event.ctrlKey && event.shiftKey) {\n        increment = 0.01;\n    }\n    else if (event.ctrlKey) {\n        increment = 0.5;\n    }\n    else {\n        increment = _constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_STEP;\n    }\n    // Move all selected dots\n    selectedDots.forEach(function (selectedDot) {\n        var dot = selectedDot;\n        // Get current position using parseFloat instead of parseInt to preserve decimals\n        var currentLeft = parseFloat(dot.style.left) || 0;\n        var currentTop = parseFloat(dot.style.top) || 0;\n        // Convert current pixel position to grid coordinates\n        var currentGridX = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(currentLeft);\n        var currentGridY = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(currentTop);\n        // Apply movement in grid coordinates\n        switch (event.key) {\n            case 'ArrowLeft':\n                currentGridX -= increment;\n                break;\n            case 'ArrowRight':\n                currentGridX += increment;\n                break;\n            case 'ArrowUp':\n                currentGridY += increment;\n                break;\n            case 'ArrowDown':\n                currentGridY -= increment;\n                break;\n        }\n        // Ensure coordinates stay within bounds (-5 to 5)\n        currentGridX = Math.max(-5, Math.min(5, currentGridX));\n        currentGridY = Math.max(-5, Math.min(5, currentGridY));\n        // Convert back to pixels\n        var newLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(currentGridX);\n        var newTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-currentGridY);\n        // Update position\n        dot.style.left = \"\".concat(newLeft, \"px\");\n        dot.style.top = \"\".concat(newTop, \"px\");\n        // Update coordinates text with precise formatting\n        var coordsElement = dot.querySelector('.dot-coordinates');\n        if (coordsElement) {\n            coordsElement.textContent = \"(\".concat(currentGridX.toFixed(1), \", \").concat(currentGridY.toFixed(1), \")\");\n        }\n        // Update connecting line and hover box\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dot);\n        if (dot.classList.contains('selected')) {\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n        }\n    });\n    // Log movement\n    debouncedLog('handleKeyboardMovement triggered');\n}, 16);\n// Create throttled mouse move function for dragging\nvar throttledMouseMove = (0,_keyboardUtils__WEBPACK_IMPORTED_MODULE_7__.throttle)(function (event) {\n    var _a, _b, _c;\n    // Skip if we're not actually dragging\n    if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging || ((_a = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _a === void 0 ? void 0 : _a.classList.contains('editing')))\n        return;\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        return;\n    var rect = xyPlane.getBoundingClientRect();\n    var newLeft = event.clientX - rect.left;\n    var newTop = event.clientY - rect.top;\n    // Check for multi-dot selection\n    var multiSelectedDots = document.querySelectorAll('.dot-container.multi-selected');\n    // Function to move a single dot and update its properties\n    var moveDot = function (dot, deltaX, deltaY) {\n        // Get current position with explicit fallback\n        var currentLeft = parseFloat(dot.style.left || '0');\n        var currentTop = parseFloat(dot.style.top || '0');\n        // Calculate new position\n        var finalLeft = currentLeft + deltaX;\n        var finalTop = currentTop + deltaY;\n        // Convert to grid coordinates\n        var x = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(finalLeft);\n        var y = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(finalTop);\n        // Normalize coordinates\n        var normalizedX = Math.max(-5, Math.min(5, x));\n        var normalizedY = Math.max(-5, Math.min(5, y));\n        // Convert back to pixels\n        var finalPixelLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(normalizedX);\n        var finalPixelTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-normalizedY);\n        // Update dot position\n        dot.style.left = \"\".concat(finalPixelLeft, \"px\");\n        dot.style.top = \"\".concat(finalPixelTop, \"px\");\n        // Update coordinates text\n        var coordsElement = dot.querySelector('.dot-coordinates');\n        if (coordsElement) {\n            coordsElement.textContent = \"(\".concat(normalizedX.toFixed(1), \", \").concat(normalizedY.toFixed(1), \")\");\n        }\n        // Update connecting line\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dot);\n        // Adjust hover box if needed\n        if (dot.classList.contains('selected')) {\n            // Type assertion to handle hover box function\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n        }\n    };\n    // If multiple dots are selected, move them together\n    if (multiSelectedDots.length > 0) {\n        // Safe parsing with explicit fallback\n        var currentDotLeft = ((_b = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _b === void 0 ? void 0 : _b.style.left) || '0';\n        var currentDotTop = ((_c = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _c === void 0 ? void 0 : _c.style.top) || '0';\n        // Calculate movement delta\n        var deltaX_1 = newLeft - parseFloat(currentDotLeft);\n        var deltaY_1 = newTop - parseFloat(currentDotTop);\n        multiSelectedDots.forEach(function (dot) {\n            moveDot(dot, deltaX_1, deltaY_1);\n        });\n    }\n    // Otherwise, move the single current dot\n    else if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot && isWithinBounds(newLeft, newTop, rect)) {\n        var x = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(newLeft);\n        var y = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(newTop);\n        var normalizedX = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.normalizeCoordinate)(x);\n        var normalizedY = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.normalizeCoordinate)(y);\n        var finalLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(normalizedX);\n        var finalTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-normalizedY);\n        // Update position\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.style.left = \"\".concat(finalLeft, \"px\");\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.style.top = \"\".concat(finalTop, \"px\");\n        // Update coordinates text\n        var coordsElement = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.querySelector('.dot-coordinates');\n        if (coordsElement) {\n            coordsElement.textContent = \"(\".concat(normalizedX.toFixed(1), \", \").concat(normalizedY.toFixed(1), \")\");\n        }\n        // Update line position\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot);\n        // Update hover box if needed\n        if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.classList.contains('selected')) {\n            // Type assertion to handle hover box function\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot);\n        }\n    }\n}, 16); // 16ms is roughly 60 FPS\n// Main keyboard handler\nfunction handleKeyboardMovement(event) {\n    var isArrowKey = ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(event.key);\n    // Get all selected dots, including both single and multi-selected\n    var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n    if (!isArrowKey || selectedDots.length === 0) {\n        return;\n    }\n    event.preventDefault();\n    // Determine increment based on key combination\n    var increment;\n    if (event.ctrlKey && event.shiftKey) {\n        increment = 0.01;\n    }\n    else if (event.ctrlKey) {\n        increment = 0.5;\n    }\n    else {\n        increment = _constants__WEBPACK_IMPORTED_MODULE_1__.COORDINATE_STEP;\n    }\n    // Move all selected dots\n    selectedDots.forEach(function (selectedDot) {\n        var dot = selectedDot;\n        // Get current position using parseFloat to preserve decimals\n        var currentLeft = parseFloat(dot.style.left) || 0;\n        var currentTop = parseFloat(dot.style.top) || 0;\n        // Convert current pixel position to grid coordinates\n        var currentGridX = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(currentLeft);\n        var currentGridY = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(currentTop);\n        // Apply movement in grid coordinates\n        switch (event.key) {\n            case 'ArrowLeft':\n                currentGridX -= increment;\n                break;\n            case 'ArrowRight':\n                currentGridX += increment;\n                break;\n            case 'ArrowUp':\n                currentGridY += increment;\n                break;\n            case 'ArrowDown':\n                currentGridY -= increment;\n                break;\n        }\n        // Ensure coordinates stay within bounds (-5 to 5)\n        currentGridX = Math.max(-5, Math.min(5, currentGridX));\n        currentGridY = Math.max(-5, Math.min(5, currentGridY));\n        // Convert back to pixels\n        var newLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(currentGridX);\n        var newTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-currentGridY);\n        // Update position\n        dot.style.left = \"\".concat(newLeft, \"px\");\n        dot.style.top = \"\".concat(newTop, \"px\");\n        // Update coordinates text with precise formatting\n        var coordsElement = dot.querySelector('.dot-coordinates');\n        if (coordsElement) {\n            coordsElement.textContent = \"(\".concat(currentGridX.toFixed(1), \", \").concat(currentGridY.toFixed(1), \")\");\n        }\n        // Update connecting line and hover box\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dot);\n        if (dot.classList.contains('selected')) {\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n        }\n    });\n    // Log movement\n    debouncedLog('handleKeyboardMovement triggered');\n    // Trigger autosave after movement\n    var urlParts = window.location.pathname.split('/');\n    if (urlParts.length > 2 && urlParts[1] !== '') {\n        autosaveDots();\n    }\n}\nfunction handleKeyboardDelete(event) {\n    // Only handle delete key\n    if (event.key !== 'Delete')\n        return;\n    // Get all multi-selected dots\n    var dotsToDelete = document.querySelectorAll('.dot-container.multi-selected, .dot-container.selected');\n    if (dotsToDelete.length === 0)\n        return;\n    // Process all selected dots\n    dotsToDelete.forEach(function (dotElement) {\n        var dotId = dotElement.getAttribute('data-dot-id');\n        if (dotId) {\n            var previousState = (0,_data__WEBPACK_IMPORTED_MODULE_0__.recordDotState)(dotElement);\n            dotElement.remove();\n            (0,_data__WEBPACK_IMPORTED_MODULE_0__.addToUndoHistory)({\n                type: 'delete',\n                dotId: dotId,\n                previousState: previousState,\n                newState: undefined\n            });\n        }\n    });\n    // Clear selection tracking\n    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n    // Trigger autosave if not on homepage\n    var urlParts = window.location.pathname.split('/');\n    if (urlParts.length > 2 && urlParts[1] !== '') {\n        autosaveDots();\n    }\n}\nfunction mouseDown(event) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('mouseDown');\n    var target = event.target;\n    // Check if we clicked a dot or part of a dot container\n    var dotContainer = findDotContainer(target);\n    var isShiftKeyPressed = event.shiftKey;\n    // Handle dot container clicks\n    if (dotContainer && !dotContainer.classList.contains('editing') && !document.querySelector('.label-input:focus')) {\n        event.preventDefault();\n        // If shift key is not pressed, handle single selection\n        if (!isShiftKeyPressed) {\n            // Clear other selections\n            var previouslySelected = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n            previouslySelected.forEach(function (d) {\n                if (d !== dotContainer) {\n                    d.classList.remove('selected');\n                    d.classList.remove('multi-selected');\n                    (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(d);\n                    (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(d);\n                }\n            });\n            // Toggle selection on clicked dot\n            var isCurrentlySelected = dotContainer.classList.contains('selected') ||\n                dotContainer.classList.contains('multi-selected');\n            if (isCurrentlySelected) {\n                dotContainer.classList.remove('selected');\n                dotContainer.classList.remove('multi-selected');\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n            }\n            else {\n                dotContainer.classList.add('selected');\n                dotContainer.classList.remove('multi-selected');\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = dotContainer;\n            }\n        }\n        else {\n            // Shift key is pressed - handle multi-selection\n            var wasSelected = dotContainer.classList.contains('selected') ||\n                dotContainer.classList.contains('multi-selected');\n            if (wasSelected) {\n                dotContainer.classList.remove('selected');\n                dotContainer.classList.remove('multi-selected');\n            }\n            else {\n                dotContainer.classList.add('multi-selected');\n                dotContainer.classList.remove('selected');\n                _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = dotContainer;\n            }\n            // Convert any single selections to multi-selections if we have multiple dots\n            var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n            if (selectedDots.length > 1) {\n                selectedDots.forEach(function (dot) {\n                    dot.classList.remove('selected');\n                    dot.classList.add('multi-selected');\n                });\n            }\n        }\n        (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dotContainer);\n        (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dotContainer);\n        // Prepare for potential dragging\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging = true;\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot = dotContainer;\n        var rect = dotContainer.getBoundingClientRect();\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.offsetX = event.clientX - rect.left;\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.offsetY = event.clientY - rect.top;\n        return; // Exit after handling dot click\n    }\n    // Handle xy-plane clicks (including multi-select)\n    var xyPlane = document.getElementById('xy-plane');\n    if (xyPlane && event.target === xyPlane) {\n        if (!isShiftKeyPressed) {\n            // Clear selections on plain click, but allow multi-select to proceed\n            var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n            selectedDots.forEach(function (container) {\n                container.classList.remove('selected');\n                container.classList.remove('multi-selected');\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(container);\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(container);\n            });\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = null;\n        }\n        // Always try to handle multi-select when clicking on xy-plane\n        handleMultiDotSelection(event);\n    }\n}\n// Update findDotContainer to handle potential null cases more explicitly\nfunction findDotContainer(element) {\n    if (!element)\n        return null;\n    if (element.classList.contains('dot-container')) {\n        return element;\n    }\n    if (element.parentElement) {\n        return findDotContainer(element.parentElement);\n    }\n    return null;\n}\nfunction handleLabelBoxDrag(event) {\n    if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox)\n        return;\n    var dotContainer = findDotContainer(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox);\n    if (!dotContainer)\n        return;\n    var dotRect = dotContainer.getBoundingClientRect();\n    var newX = event.clientX - dotRect.left - _data__WEBPACK_IMPORTED_MODULE_0__.tpf.labelBoxOffset.x;\n    var newY = event.clientY - dotRect.top - _data__WEBPACK_IMPORTED_MODULE_0__.tpf.labelBoxOffset.y;\n    var dx = newX;\n    var dy = newY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    if (distance >= _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.MIN_LINE_LENGTH &&\n        distance <= _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.MAX_LINE_LENGTH) {\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox.style.left = \"\".concat(newX, \"px\");\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox.style.top = \"\".concat(newY, \"px\");\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dotContainer);\n        dotContainer.setAttribute('data-line-length', distance.toString());\n    }\n}\nfunction mouseMove(event) {\n    var _a, _b, _c;\n    // Handle label box dragging separately and without throttling\n    if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isLabelBoxDragging && _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox) {\n        handleLabelBoxDrag(event);\n        return;\n    }\n    // Skip if we're not dragging or editing\n    if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging || ((_a = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _a === void 0 ? void 0 : _a.classList.contains('editing')))\n        return;\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        return;\n    var rect = xyPlane.getBoundingClientRect();\n    var newLeft = event.clientX - rect.left;\n    var newTop = event.clientY - rect.top;\n    // Get all selected dots\n    var selectedDots = document.querySelectorAll('.dot-container.selected');\n    // If we have multiple selected dots\n    if (selectedDots.length > 1) {\n        // Calculate movement delta based on current dot\n        var currentLeft = parseFloat(((_b = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _b === void 0 ? void 0 : _b.style.left) || '0');\n        var currentTop = parseFloat(((_c = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) === null || _c === void 0 ? void 0 : _c.style.top) || '0');\n        var deltaX_2 = newLeft - currentLeft;\n        var deltaY_2 = newTop - currentTop;\n        // Move all selected dots by the same delta\n        selectedDots.forEach(function (dot) {\n            var dotEl = dot;\n            var originalLeft = parseFloat(dotEl.style.left || '0');\n            var originalTop = parseFloat(dotEl.style.top || '0');\n            var finalLeft = originalLeft + deltaX_2;\n            var finalTop = originalTop + deltaY_2;\n            // Convert to grid coordinates\n            var x = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(finalLeft);\n            var y = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(finalTop);\n            // Normalize coordinates\n            var normalizedX = Math.max(-5, Math.min(5, x));\n            var normalizedY = Math.max(-5, Math.min(5, y));\n            // Convert back to pixels\n            var finalPixelLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(normalizedX);\n            var finalPixelTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-normalizedY);\n            // Update position\n            dotEl.style.left = \"\".concat(finalPixelLeft, \"px\");\n            dotEl.style.top = \"\".concat(finalPixelTop, \"px\");\n            // Update coordinates display\n            var coordsElement = dotEl.querySelector('.dot-coordinates');\n            if (coordsElement) {\n                coordsElement.textContent = \"(\".concat(normalizedX.toFixed(1), \", \").concat(normalizedY.toFixed(1), \")\");\n            }\n            // Update connecting line\n            (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dotEl);\n            // Update hover box if selected\n            if (dotEl.classList.contains('selected')) {\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dotEl);\n            }\n        });\n    }\n    // Single dot movement (original behavior)\n    else if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot && isWithinBounds(newLeft, newTop, rect)) {\n        var x = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(newLeft);\n        var y = -(0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.pixelToCoordinate)(newTop);\n        var normalizedX = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.normalizeCoordinate)(x);\n        var normalizedY = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.normalizeCoordinate)(y);\n        var finalLeft = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(normalizedX);\n        var finalTop = (0,_createTickMarks__WEBPACK_IMPORTED_MODULE_2__.coordinateToPixel)(-normalizedY);\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.style.left = \"\".concat(finalLeft, \"px\");\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.style.top = \"\".concat(finalTop, \"px\");\n        var coordsElement = _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.querySelector('.dot-coordinates');\n        if (coordsElement) {\n            coordsElement.textContent = \"(\".concat(normalizedX.toFixed(1), \", \").concat(normalizedY.toFixed(1), \")\");\n        }\n        (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot);\n        if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.classList.contains('selected')) {\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot);\n        }\n    }\n}\nfunction mouseUp(event) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_4__[\"default\"])('mouseUp');\n    if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging && _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot) {\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.isDragging = false;\n        var previousState = (0,_data__WEBPACK_IMPORTED_MODULE_0__.recordDotState)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot);\n        // Ensure the dot has a unique ID\n        if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.getAttribute('data-dot-id')) {\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.setAttribute('data-dot-id', (0,_data__WEBPACK_IMPORTED_MODULE_0__.generateDotId)());\n        }\n        // Add to undo history\n        (0,_data__WEBPACK_IMPORTED_MODULE_0__.addToUndoHistory)({\n            type: 'move',\n            dotId: _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.getAttribute('data-dot-id'),\n            previousState: previousState,\n            newState: (0,_data__WEBPACK_IMPORTED_MODULE_0__.recordDotState)(_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot)\n        });\n        // Get all current dots and save only after drag is complete\n        var dots = getAllDots();\n        (0,_dotsSave__WEBPACK_IMPORTED_MODULE_3__.dotsSave)(dots).catch(function (error) {\n            console.error('Error saving dots:', error);\n        });\n        // Dispatch change event\n        var moveEvent = new CustomEvent('dotChanged', { bubbles: true });\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot.dispatchEvent(moveEvent);\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentDot = null;\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.skipGraphClick = true;\n        setTimeout(function () {\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.skipGraphClick = false;\n        }, 0);\n    }\n}\nfunction isWithinBounds(x, y, rect) {\n    return x >= 0 && x <= rect.width && y >= 0 && y <= rect.height;\n}\nfunction updateDotCoordinates(dot) {\n    var coordsElement = dot.querySelector('.dot-coordinates');\n    if (!coordsElement)\n        return;\n    // Use the stored coordinate values instead of recalculating\n    var storedCoords = dot.getAttribute('data-original-coords');\n    if (storedCoords) {\n        coordsElement.textContent = storedCoords;\n    }\n}\nfunction autosaveDots() {\n    var dots = getAllDots();\n    autosaveToServer(dots);\n}\nfunction startLabelBoxDrag(dot, labelBox, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.isLabelBoxDragging = true;\n    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox = labelBox;\n    var rect = labelBox.getBoundingClientRect();\n    _data__WEBPACK_IMPORTED_MODULE_0__.tpf.labelBoxOffset = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n    // Store original state for undo\n    var previousState = (0,_data__WEBPACK_IMPORTED_MODULE_0__.recordDotState)(dot);\n    // Update mouseMove to handle label box dragging\n    var originalMouseMove = window.onmousemove;\n    var originalMouseUp = window.onmouseup;\n    window.onmousemove = function (e) {\n        if (!_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isLabelBoxDragging || !_data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox)\n            return;\n        var dotRect = dot.getBoundingClientRect();\n        var newX = e.clientX - dotRect.left - _data__WEBPACK_IMPORTED_MODULE_0__.tpf.labelBoxOffset.x;\n        var newY = e.clientY - dotRect.top - _data__WEBPACK_IMPORTED_MODULE_0__.tpf.labelBoxOffset.y;\n        // Calculate distance from dot center\n        var dx = newX;\n        var dy = newY;\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        // Enforce minimum and maximum line length\n        if (distance >= _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.MIN_LINE_LENGTH &&\n            distance <= _constants__WEBPACK_IMPORTED_MODULE_1__.LABEL_CONNECTION.MAX_LINE_LENGTH) {\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox.style.left = \"\".concat(newX, \"px\");\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox.style.top = \"\".concat(newY, \"px\");\n            // Update connecting line\n            (0,_utils__WEBPACK_IMPORTED_MODULE_6__.updateConnectingLine)(dot);\n            // Store the new line length\n            dot.setAttribute('data-line-length', distance.toString());\n        }\n    };\n    window.onmouseup = function () {\n        if (_data__WEBPACK_IMPORTED_MODULE_0__.tpf.isLabelBoxDragging && _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox) {\n            // Add to undo history\n            (0,_data__WEBPACK_IMPORTED_MODULE_0__.addToUndoHistory)({\n                type: 'labelMove',\n                dotId: dot.getAttribute('data-dot-id'),\n                previousState: previousState,\n                newState: (0,_data__WEBPACK_IMPORTED_MODULE_0__.recordDotState)(dot)\n            });\n            // Save the new state\n            var dots = getAllDots();\n            (0,_dotsSave__WEBPACK_IMPORTED_MODULE_3__.dotsSave)(dots).catch(console.error);\n        }\n        // Reset dragging state\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.isLabelBoxDragging = false;\n        _data__WEBPACK_IMPORTED_MODULE_0__.tpf.currentLabelBox = null;\n        window.onmousemove = originalMouseMove;\n        window.onmouseup = originalMouseUp;\n    };\n}\n// SELECT and MOVE MULTIPLE DOTS START//\nvar isSelecting = false;\nvar selectionStart = null;\nvar selectionRectangle = null;\nfunction createSelectionRectangle() {\n    var rectangle = document.createElement('div');\n    rectangle.classList.add('selection-rectangle');\n    rectangle.style.position = 'absolute';\n    rectangle.style.border = '1px solid blue';\n    rectangle.style.backgroundColor = 'rgba(0, 0, 255, 0.1)';\n    rectangle.style.pointerEvents = 'none';\n    return rectangle;\n}\nfunction handleMultiDotSelection(event) {\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        return;\n    // Prevent default to stop dot creation\n    event.preventDefault();\n    event.stopPropagation();\n    // Only start selection if clicking on empty graph space\n    if (event.target !== xyPlane)\n        return;\n    // Clean up any existing selection rectangles first\n    var existingRectangles = document.querySelectorAll('.selection-rectangle');\n    existingRectangles.forEach(function (rect) { return rect.remove(); });\n    // Clear previous selections if not using shift key\n    if (!event.shiftKey) {\n        var previouslySelected = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n        previouslySelected.forEach(function (dot) {\n            dot.classList.remove('selected');\n            dot.classList.remove('multi-selected');\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dot);\n        });\n    }\n    isSelecting = true;\n    selectionStart = {\n        x: event.clientX - xyPlane.getBoundingClientRect().left,\n        y: event.clientY - xyPlane.getBoundingClientRect().top\n    };\n    // Create and add selection rectangle to the document body\n    selectionRectangle = createSelectionRectangle();\n    document.body.appendChild(selectionRectangle);\n    var cleanup = function () {\n        isSelecting = false;\n        if (selectionRectangle) {\n            selectionRectangle.remove();\n            selectionRectangle = null;\n        }\n        selectionStart = null;\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n        window.removeEventListener('keydown', onEscape);\n    };\n    var onEscape = function (e) {\n        if (e.key === 'Escape') {\n            cleanup();\n        }\n    };\n    var onMouseMove = function (moveEvent) {\n        if (!isSelecting || !selectionStart || !selectionRectangle || !xyPlane)\n            return;\n        // Calculate positions relative to page\n        var xyPlaneRect = xyPlane.getBoundingClientRect();\n        var currentX = moveEvent.clientX;\n        var currentY = moveEvent.clientY;\n        var startX = xyPlaneRect.left + selectionStart.x;\n        var startY = xyPlaneRect.top + selectionStart.y;\n        // Update rectangle dimensions\n        var width = Math.abs(currentX - startX);\n        var height = Math.abs(currentY - startY);\n        var left = Math.min(currentX, startX);\n        var top = Math.min(currentY, startY);\n        Object.assign(selectionRectangle.style, {\n            position: 'fixed',\n            width: \"\".concat(width, \"px\"),\n            height: \"\".concat(height, \"px\"),\n            left: \"\".concat(left, \"px\"),\n            top: \"\".concat(top, \"px\"),\n            display: 'block',\n            zIndex: '1000'\n        });\n        // Update selected dots\n        var dots = document.querySelectorAll('.dot-container');\n        var selectedDots = new Set();\n        dots.forEach(function (dot) {\n            var dotRect = dot.getBoundingClientRect();\n            var dotBox = {\n                left: dotRect.left,\n                right: dotRect.right,\n                top: dotRect.top,\n                bottom: dotRect.bottom\n            };\n            // Check if any part of the dot container intersects with selection\n            if (!(left > dotBox.right ||\n                left + width < dotBox.left ||\n                top > dotBox.bottom ||\n                top + height < dotBox.top)) {\n                selectedDots.add(dot);\n            }\n        });\n        // Apply appropriate selection states\n        dots.forEach(function (dot) {\n            if (selectedDots.has(dot)) {\n                // Always use multi-selected for drag box selection\n                dot.classList.remove('selected');\n                dot.classList.add('multi-selected');\n            }\n            else if (!moveEvent.shiftKey) {\n                // Clear selection for unselected dots\n                dot.classList.remove('selected');\n                dot.classList.remove('multi-selected');\n            }\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n            (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dot);\n        });\n    };\n    var onMouseUp = function () {\n        if (!isSelecting)\n            return;\n        // Update selection states one final time\n        var selectedDots = document.querySelectorAll('.dot-container.selected, .dot-container.multi-selected');\n        var dotsArray = Array.from(selectedDots);\n        if (dotsArray.length > 0) {\n            // Always keep dots in multi-selected state when using drag box\n            dotsArray.forEach(function (dot) {\n                dot.classList.remove('selected');\n                dot.classList.add('multi-selected');\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dot);\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dot);\n            });\n            // Update tpf.selectedDot\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = dotsArray[dotsArray.length - 1];\n        }\n        cleanup();\n    };\n    // Add event listeners to window\n    window.addEventListener('mousemove', onMouseMove);\n    window.addEventListener('mouseup', onMouseUp);\n    window.addEventListener('keydown', onEscape);\n}\nfunction highlightSelectedDots(left, top, width, height) {\n    var xyPlane = document.getElementById('xy-plane');\n    if (!xyPlane)\n        return;\n    var dotContainers = document.querySelectorAll('.dot-container');\n    var selectedDotsCount = 0;\n    dotContainers.forEach(function (dot) {\n        try {\n            // Convert to HTMLElement safely using our utility function\n            var dotElement = ensureHTMLElement(dot);\n            var dotRect = dotElement.getBoundingClientRect();\n            var xyPlaneRect = xyPlane.getBoundingClientRect();\n            var dotLeft = dotRect.left - xyPlaneRect.left;\n            var dotTop = dotRect.top - xyPlaneRect.top;\n            var dotRight = dotLeft + dotRect.width;\n            var dotBottom = dotTop + dotRect.height;\n            var isInSelection = dotLeft >= left &&\n                dotRight <= left + width &&\n                dotTop >= top &&\n                dotBottom <= top + height;\n            // Only add selected class if not already selected\n            if (isInSelection && !dotElement.classList.contains('selected')) {\n                dotElement.classList.add('selected');\n                // Use the safely converted HTMLElement\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustSelectedBox)(dotElement);\n                (0,_dotsCreate__WEBPACK_IMPORTED_MODULE_5__.adjustHoverBox)(dotElement);\n                selectedDotsCount++;\n            }\n        }\n        catch (error) {\n            console.error('Error processing dot element:', error);\n        }\n    });\n    // Update the currently selected dot to the last selected dot\n    var selectedDots = document.querySelectorAll('.dot-container.selected');\n    if (selectedDots.length > 0) {\n        try {\n            // Convert last selected dot to HTMLElement safely\n            var lastSelectedDot = ensureHTMLElement(selectedDots[selectedDots.length - 1]);\n            _data__WEBPACK_IMPORTED_MODULE_0__.tpf.selectedDot = lastSelectedDot;\n        }\n        catch (error) {\n            console.error('Error setting selected dot:', error);\n        }\n    }\n    console.log(\"Dots selected: \".concat(selectedDotsCount));\n}\n// SELECT and MOVE MULTIPLE DOTS END //\n\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/mouseEvents.ts?");

/***/ }),

/***/ "./src/public/ts/navScroll.ts":
/*!************************************!*\
  !*** ./src/public/ts/navScroll.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// src/navScroll.ts\nvar NavigationScroller = /** @class */ (function () {\n    function NavigationScroller() {\n        var _this = this;\n        this.handleScroll = function () {\n            if (!_this.nav || !_this.pageHeader)\n                return;\n            var scrollTop = window.scrollY;\n            var headerRect = _this.pageHeader.getBoundingClientRect();\n            var maxScroll = NavigationScroller.NAV_HEIGHT;\n            if (scrollTop > 0) {\n                // Move nav bar up\n                var navTransform = Math.min(scrollTop, maxScroll);\n                _this.nav.style.transform = \"translateY(-\".concat(navTransform, \"px)\");\n                // Add sticky class when header reaches top\n                if (headerRect.top <= 0) {\n                    _this.pageHeader.classList.add('sticky');\n                }\n            }\n            else {\n                // Reset nav position and remove sticky class\n                _this.nav.style.transform = 'translateY(0)';\n                _this.pageHeader.classList.remove('sticky');\n            }\n            _this.state.lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;\n        };\n        this.state = {\n            lastScrollTop: 0,\n            ticking: false\n        };\n        this.nav = document.querySelector('.fixed-nav');\n        this.pageHeader = document.querySelector('.page-header-container');\n        if (this.nav && this.pageHeader) {\n            this.initialize();\n        }\n    }\n    NavigationScroller.prototype.initialize = function () {\n        // Set up nav bar\n        if (this.nav) {\n            this.nav.style.position = 'fixed';\n            this.nav.style.top = '0';\n            this.nav.style.left = '0';\n            this.nav.style.right = '0';\n            this.nav.style.zIndex = '999';\n            this.nav.style.transition = 'transform 0.2s ease-out';\n        }\n        // Set up page header\n        if (this.pageHeader) {\n            this.pageHeader.style.position = 'sticky';\n            this.pageHeader.style.top = '0';\n            this.pageHeader.style.zIndex = '1000';\n            this.pageHeader.style.background = 'white';\n            this.pageHeader.style.transition = 'height 0.2s ease-out';\n        }\n        this.attachEventListeners();\n    };\n    NavigationScroller.prototype.attachEventListeners = function () {\n        var _this = this;\n        window.addEventListener('scroll', function () {\n            if (!_this.state.ticking) {\n                window.requestAnimationFrame(function () {\n                    _this.handleScroll();\n                    _this.state.ticking = false;\n                });\n                _this.state.ticking = true;\n            }\n        });\n    };\n    NavigationScroller.NAV_HEIGHT = 64;\n    return NavigationScroller;\n}());\n// Initialize when DOM is ready\ndocument.addEventListener('DOMContentLoaded', function () {\n    new NavigationScroller();\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NavigationScroller);\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/navScroll.ts?");

/***/ }),

/***/ "./src/public/ts/removeAnyExistingElementsWithClassName.ts":
/*!*****************************************************************!*\
  !*** ./src/public/ts/removeAnyExistingElementsWithClassName.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeAnyExistingElementsWithClassName: () => (/* binding */ removeAnyExistingElementsWithClassName)\n/* harmony export */ });\n/* harmony import */ var _util_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util.log */ \"./src/public/ts/util.log.ts\");\n\nfunction removeAnyExistingElementsWithClassName(className) {\n    (0,_util_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('removeAnyExistingElementsWithClassName');\n    var elements = document.getElementsByClassName(className);\n    while (elements.length > 0) {\n        elements[0].remove();\n    }\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/removeAnyExistingElementsWithClassName.ts?");

/***/ }),

/***/ "./src/public/ts/util.log.ts":
/*!***********************************!*\
  !*** ./src/public/ts/util.log.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ log)\n/* harmony export */ });\n// util.log.ts\nvar __spreadArray = (undefined && undefined.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar ENABLED_CATEGORIES = [\n    'mouse',\n    'keyboard',\n    'debug',\n    //'general',\n    'dots' // Enable all categories for debugging\n];\nfunction log(message, category) {\n    if (category === void 0) { category = 'general'; }\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    try {\n        if (ENABLED_CATEGORIES.includes(category)) {\n            console.log.apply(console, __spreadArray([\"[\".concat(category, \"]\"), message], args, false));\n        }\n    }\n    catch (error) {\n        // Silently fail\n    }\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/util.log.ts?");

/***/ }),

/***/ "./src/public/ts/utils.ts":
/*!********************************!*\
  !*** ./src/public/ts/utils.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDotElements: () => (/* binding */ getDotElements),\n/* harmony export */   startLabelBoxDrag: () => (/* binding */ startLabelBoxDrag),\n/* harmony export */   updateConnectingLine: () => (/* binding */ updateConnectingLine)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"./src/public/ts/constants.ts\");\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n\n\nfunction updateConnectingLine(dot) {\n    var line = dot.querySelector('.connecting-line');\n    var labelContainer = dot.querySelector('.label-container');\n    var dotElement = dot.querySelector('.dot');\n    if (!line || !labelContainer || !dotElement) {\n        if (_constants__WEBPACK_IMPORTED_MODULE_0__.DEBUG) {\n            console.warn('Missing elements:', { line: !!line, label: !!labelContainer, dot: !!dotElement });\n        }\n        return;\n    }\n    // Get dimensions before any transforms\n    var originalLabelBox = labelContainer.getBoundingClientRect();\n    var originalDotBox = dotElement.getBoundingClientRect();\n    var containerRect = dot.getBoundingClientRect();\n    // Calculate center points\n    var dotCenterX = originalDotBox.left - containerRect.left + originalDotBox.width / 2;\n    var dotCenterY = originalDotBox.top - containerRect.top + originalDotBox.height / 2;\n    var labelCenterX = originalLabelBox.left - containerRect.left;\n    var labelCenterY = originalLabelBox.top - containerRect.top + originalLabelBox.height / 2;\n    // Connect to left edge of label at vertical center\n    var labelLeftX = originalLabelBox.left - containerRect.left;\n    var dx = labelLeftX - dotCenterX;\n    var dy = labelCenterY - dotCenterY;\n    var angle = Math.atan2(dy, dx) * (180 / Math.PI);\n    var length = Math.sqrt(dx * dx + dy * dy);\n    try {\n        var baseStyles = {\n            position: 'absolute',\n            width: \"\".concat(length, \"px\"),\n            height: '1px',\n            backgroundColor: _constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.LINE_COLOR,\n            borderTop: \"\".concat(_constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.LINE_WIDTH, \"px solid \").concat(_constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.LINE_COLOR),\n            display: 'block',\n            visibility: 'visible',\n            zIndex: '1',\n            pointerEvents: 'none',\n            transform: \"rotate(\".concat(angle, \"deg)\")\n        };\n        var defaultPosition = {\n            top: _constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.LINE_POSITION.TOP,\n            left: _constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.LINE_POSITION.LEFT,\n        };\n        if (!dotElement.hasAttribute('data-line-position')) {\n            // First time positioning\n            Object.assign(line.style, __assign(__assign({}, baseStyles), defaultPosition));\n            dotElement.setAttribute('data-line-position', JSON.stringify(defaultPosition));\n            if (_constants__WEBPACK_IMPORTED_MODULE_0__.DEBUG) {\n                console.log('Initial line position set:', {\n                    dotId: dot.getAttribute('data-dot-id'),\n                    position: defaultPosition\n                });\n            }\n        }\n        else {\n            // Restore saved position\n            var storedPosition = JSON.parse(dotElement.getAttribute('data-line-position') || '{}');\n            Object.assign(line.style, __assign(__assign({}, baseStyles), storedPosition));\n            if (_constants__WEBPACK_IMPORTED_MODULE_0__.DEBUG) {\n                console.log('Restored line position:', {\n                    dotId: dot.getAttribute('data-dot-id'),\n                    position: storedPosition\n                });\n            }\n        }\n        dot.setAttribute('data-line-length', length.toString());\n        dot.setAttribute('data-line-angle', angle.toString());\n        line.classList.add('active-line');\n        var finalLineBox = line.getBoundingClientRect();\n        if (finalLineBox.width === 0 || finalLineBox.height === 0) {\n            console.warn('Invalid line dimensions:', {\n                width: finalLineBox.width,\n                height: finalLineBox.height,\n                styles: {\n                    transform: line.style.transform,\n                    width: line.style.width,\n                    display: line.style.display\n                }\n            });\n            // Force redraw\n            line.style.display = 'none';\n            line.offsetHeight;\n            line.style.display = 'block';\n        }\n        if (_constants__WEBPACK_IMPORTED_MODULE_0__.DEBUG) {\n            console.log('Line update complete:', {\n                dotId: dot.getAttribute('data-dot-id'),\n                measurements: {\n                    length: length,\n                    angle: angle,\n                    position: {\n                        top: line.style.top,\n                        left: line.style.left\n                    }\n                },\n                dimensions: {\n                    width: line.offsetWidth,\n                    height: line.offsetHeight\n                }\n            });\n        }\n    }\n    catch (error) {\n        console.error('Error updating connecting line:', {\n            error: error instanceof Error ? error.message : 'Unknown error',\n            dot: dot.getAttribute('data-dot-id'),\n            measurements: {\n                length: length,\n                angle: angle,\n                position: {\n                    top: line.style.top,\n                    left: line.style.left\n                }\n            }\n        });\n    }\n}\nfunction startLabelBoxDrag(dot, labelBox, event) {\n    var _a;\n    if (!window.tpf)\n        return;\n    event.preventDefault();\n    event.stopPropagation();\n    // Store original values before drag starts\n    var originalOffset = {\n        x: parseInt(labelBox.style.left) || _constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.DEFAULT_LENGTH,\n        y: parseInt(labelBox.style.top) || -_constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.DEFAULT_LENGTH\n    };\n    var originalLength = parseFloat((_a = dot.getAttribute('data-line-length')) !== null && _a !== void 0 ? _a : '0') || _constants__WEBPACK_IMPORTED_MODULE_0__.LABEL_CONNECTION.DEFAULT_LENGTH;\n    dot.setAttribute('data-original-offset', JSON.stringify(originalOffset));\n    dot.setAttribute('data-original-length', originalLength.toString());\n    window.tpf.isLabelBoxDragging = true;\n    window.tpf.currentLabelBox = labelBox;\n    var rect = labelBox.getBoundingClientRect();\n    window.tpf.labelBoxOffset = {\n        x: event.clientX - rect.left,\n        y: event.clientY - rect.top\n    };\n}\nfunction getDotElements(dot) {\n    return {\n        dot: dot.querySelector('.dot'),\n        label: dot.querySelector('.label-container'),\n        line: dot.querySelector('.connecting-line'),\n        coordinates: dot.querySelector('.dot-coordinates')\n    };\n}\n\n\n//# sourceURL=webpack://tpf-base/./src/public/ts/utils.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/public/ts/index.ts");
/******/ 	
/******/ })()
;