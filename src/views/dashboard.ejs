<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow rounded-lg p-6 mb-6">
        <h1 class="text-2xl font-bold mb-4">Dashboard</h1>
        <p class="mb-4">Welcome, <%= user.username %>!</p>
        
        <!-- Create New Page Button -->
        <div class="mb-8">
            <button onclick="showCreateModal()" 
                    class="bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded">
                Create New Page
            </button>
        </div>

        <!-- List of Pages -->
        <div>
            <h2 class="text-xl font-semibold mb-4">Your Pages</h2>
            <% if (pages && pages.length > 0) { %>
                <div class="space-y-4">
                    <% pages.forEach(page => { %>
                        <div class="border rounded p-4 flex justify-between items-center hover:bg-gray-50">
                            <div>
                                <h3 class="font-medium"><%= page.title %></h3>
                                <p class="text-sm text-gray-500">Created: <%= new Date(page.createdAt).toLocaleDateString() %></p>
                                <p class="text-xs text-gray-400">URL: /<%= user.username %>/<%= page.urlId %></p>
                            </div>
                            <div class="flex gap-2">
                                <a href="/<%= user.username %>/<%= page.urlId %>" 
                                   class="text-blue-500 hover:text-blue-600 px-3 py-1 rounded border border-blue-500 hover:border-blue-600">
                                    View
                                </a>
                                <a href="/pages/edit/<%= page.urlId %>"
                                   class="text-green-500 hover:text-green-600 px-3 py-1 rounded border border-green-500 hover:border-green-600">
                                    Edit
                                </a>
                                <button onclick="showDeleteModal('<%= page.urlId %>', '<%= page.title %>')"
                                        class="text-red-500 hover:text-red-600 px-3 py-1 rounded border border-red-500 hover:border-red-600">
                                    Delete
                                </button>
                            </div>
                        </div>
                    <% }) %>
                </div>
            <% } else { %>
                <p class="text-gray-600">You haven't created any pages yet.</p>
            <% } %>
        </div>
    </div>
</div>

<!-- Create Page Modal -->
<div id="createModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg max-w-3xl w-full mx-4">
        <h2 class="text-xl font-semibold mb-4">Create New Page</h2>
        <form id="createPageForm" class="space-y-4">
            <div>
                <label for="title" class="block text-sm font-medium text-gray-700">Page Title</label>
                <input type="text" id="title" name="title" required
                    class="mt-1 block w-full rounded-md border border-gray-300 p-2 focus:border-blue-500 focus:ring-blue-500">
            </div>
            
            <!-- Grid Container -->
            <div class="border rounded-lg p-4">
                <div id="xy-plane" class="relative w-[456px] h-[456px] mx-auto">
                    <div class="x-axis"></div>
                    <div class="y-axis"></div>
                </div>
            </div>

            <div class="flex justify-end gap-4 mt-4">
                <button type="button" onclick="closeCreateModal()" 
                    class="px-4 py-2 border rounded hover:bg-gray-100">
                    Cancel
                </button>
                <button type="submit"
                    class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                    Create Page
                </button>
            </div>
        </form>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg max-w-md w-full mx-4">
        <h3 class="text-lg font-semibold mb-4">Confirm Delete</h3>
        <p class="mb-4">Are you sure you want to delete "<span id="pageTitle" class="font-medium"></span>"? This action cannot be undone.</p>
        <div class="flex justify-end gap-4">
            <button onclick="closeDeleteModal()" 
                class="px-4 py-2 border rounded hover:bg-gray-100">
                Cancel
            </button>
            <button onclick="deletePageConfirmed()"
                class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">
                Delete
            </button>
        </div>
    </div>
</div>

<script>
let currentPageUrlId = null;

// Create Modal Functions
function showCreateModal() {
    document.getElementById('createModal').classList.remove('hidden');
    initializeGrid();
}

function closeCreateModal() {
    document.getElementById('createModal').classList.add('hidden');
}

function initializeGrid() {
    // Import and initialize grid components
    import('/js/createTickMarks.js').then(module => {
        module.createTickMarks();
    });
    import('/js/dotsCreate.js').then(module => {
        module.dotsCreate();
    });
}

// Handle form submission
document.getElementById('createPageForm').addEventListener('submit', async function(event) {
    event.preventDefault();
    
    const title = document.getElementById('title').value;
    const dots = Array.from(document.getElementsByClassName('dot-container')).map(dot => {
        const labelElement = dot.querySelector('.user-dot-label');
        const coordsElement = dot.querySelector('.dot-coordinates');
        return {
            coordinates: coordsElement?.textContent || '',
            label: labelElement?.textContent || 'null'
        };
    });

    try {
        const response = await fetch('/api/pages/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                title: title,
                content: JSON.stringify(dots)
            })
        });

        if (response.ok) {
            window.location.reload();
        } else {
            const data = await response.json();
            alert(data.error || 'Failed to create page');
        }
    } catch (error) {
        console.error('Error creating page:', error);
        alert('Error creating page. Please try again.');
    }
});

// Delete Modal Functions
function showDeleteModal(urlId, title) {
    currentPageUrlId = urlId;
    document.getElementById('pageTitle').textContent = title;
    document.getElementById('deleteModal').classList.remove('hidden');
}

function closeDeleteModal() {
    currentPageUrlId = null;
    document.getElementById('deleteModal').classList.add('hidden');
}

async function deletePageConfirmed() {
    if (!currentPageUrlId) return;
    
    try {
        const response = await fetch(`/api/pages/${currentPageUrlId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            window.location.reload();
        } else {
            const data = await response.json();
            alert(data.error || 'Failed to delete page');
        }
    } catch (error) {
        console.error('Error deleting page:', error);
        alert('Error deleting page. Please try again.');
    }
}

// Close modals if clicking outside
document.querySelectorAll('#createModal, #deleteModal').forEach(modal => {
    modal.addEventListener('click', function(event) {
        if (event.target === this) {
            if (this.id === 'createModal') {
                closeCreateModal();
            } else {
                closeDeleteModal();
            }
        }
    });

    // Prevent closing when clicking inside the modal content
    modal.querySelector('.bg-white').addEventListener('click', function(event) {
        event.stopPropagation();
    });
});

// Close modals on escape key
document.addEventListener('keydown', function(event) {
    if (event.key === 'Escape') {
        closeCreateModal();
        closeDeleteModal();
    }
});
</script>