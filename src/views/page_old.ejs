<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow rounded-lg p-6 relative">
        <!-- Action Links and full-width line -->
        <% if (typeof currentUser !== 'undefined' && currentUser && currentUser.id === user.id) { %>
            <!-- Icons container -->
            <div class="absolute top-4 right-6 flex gap-6 text-sm">
                <a href="#" id="saveTitleLink" class="text-gray-400 hover:text-blue-600 transition-colors duration-200 hidden" title="Save Changes">
                    <ion-icon name="save-outline" class="w-5 h-5"></ion-icon>
                </a>
                <a href="#" onclick="showChangeUrlModal()" class="text-gray-400 hover:text-blue-600 transition-colors duration-200" title="Change URL">
                    <ion-icon name="pencil-outline" class="w-5 h-5"></ion-icon>
                </a>
                <a href="#" onclick="confirmDelete()" class="text-gray-400 hover:text-red-600 transition-colors duration-200" title="Delete">
                    <ion-icon name="trash-outline" class="w-5 h-5"></ion-icon>
                </a>
            </div>
            <!-- Full-width line -->
            <div class="absolute left-0 right-0 top-12 h-px bg-gray-200"></div>
        <% } %>

        <!-- Title Section - Centered with reduced margins -->
        <div class="flex flex-col items-center mt-4">
            <div class="editable-title-container text-center">
                <div id="page-title" 
                     class="text-4xl editable-title" 
                     contenteditable="<%= currentUser && currentUser.id === user.id %>">
                    <%= page.title %>
                </div>
            </div>
        </div>

        <!-- Grid System - Reduced top margin by 10px -->
        <div class="mt-[36px]">
            <div id="xy-plane" style="position: relative; width: 400px; height: 400px; margin: auto;">
                <div class="x-axis">
                    <div class="x-label right top">Always</div>
                    <div class="x-label right bottom">Do</div>
                    <div class="x-label left top">Never</div>
                    <div class="x-label left bottom">Do</div>
                </div>
                <div class="y-axis">
                    <div class="y-label top">Helpful</div>
                    <div class="y-label bottom">Unhelpful</div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg max-w-md w-full mx-4">
        <h3 class="text-lg font-semibold mb-4">Confirm Delete</h3>
        <p class="mb-4">Are you sure you want to delete this page? This action cannot be undone.</p>
        <div class="flex justify-end gap-4">
            <button onclick="closeDeleteModal()" class="px-4 py-2 border rounded hover:bg-gray-100">
                Cancel
            </button>
            <button onclick="deletePage()" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">
                Delete
            </button>
        </div>
    </div>
</div>

<!-- URL Change Modal -->
<div id="changeUrlModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
    <div class="bg-white p-4 rounded-lg shadow-lg max-w-sm w-full mx-4">
        <div class="mb-4 text-center text-gray-600">Change URL</div>
        <div class="flex items-center gap-2 mb-4">
            <input type="text" 
                   id="newUrlInput" 
                   class="flex-1 px-3 py-2 border rounded focus:outline-none focus:border-blue-500"
                   value="<%= page.urlId %>"
            >
            <button onclick="updateUrl()" 
                    class="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">
                Change
            </button>
            <button onclick="closeChangeUrlModal()" 
                    class="text-gray-400 hover:text-gray-600">
                <ion-icon name="close-outline" class="w-6 h-6"></ion-icon>
            </button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const titleElement = document.getElementById('page-title');
    const saveLink = document.getElementById('saveTitleLink');
    let originalTitle = titleElement ? titleElement.textContent.trim() : '';
    let isProcessing = false;
    
    if (titleElement && saveLink) {
        // Title change detection
        titleElement.addEventListener('input', function() {
            const currentTitle = this.textContent.trim();
            if (currentTitle !== originalTitle) {
                saveLink.classList.remove('hidden');
            } else {
                saveLink.classList.add('hidden');
            }
        });

        // Save link click handler
        saveLink.addEventListener('click', async function(e) {
            e.preventDefault();
            if (isProcessing) return;
            isProcessing = true;
            
            const newTitle = titleElement.textContent.trim();
            
            try {
                const response = await fetch('/api/pages/update/<%= page.urlId %>', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        title: newTitle,
                        content: newTitle
                    })
                });

                const data = await response.json();

                if (response.ok && data.success) {
                    originalTitle = newTitle;
                    saveLink.classList.add('hidden');
                    console.log('Title updated successfully');
                } else {
                    throw new Error(data.message || 'Failed to update title');
                }
            } catch (error) {
                console.error('Error updating title:', error);
                alert(error.message || 'Failed to update title. Please try again.');
            } finally {
                isProcessing = false;
            }
        });

        // Handle Enter key
        titleElement.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                if (!isProcessing) {
                    saveLink.click();
                }
            }
        });

        // Handle blur event
        titleElement.addEventListener('blur', function(e) {
            // Only reset if not clicking the save link
            if (e.relatedTarget !== saveLink && this.textContent.trim() === '') {
                this.textContent = originalTitle;
                saveLink.classList.add('hidden');
            }
        });
    }
});

// URL change functions
function showChangeUrlModal() {
    event.preventDefault();
    document.getElementById('changeUrlModal').classList.remove('hidden');
    document.getElementById('newUrlInput').select();
}

function closeChangeUrlModal() {
    document.getElementById('changeUrlModal').classList.add('hidden');
}

async function updateUrl() {
    const newUrl = document.getElementById('newUrlInput').value.trim();
    if (!newUrl) return;

    try {
        const response = await fetch('/api/pages/update/<%= page.urlId %>/url', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                newUrlId: newUrl
            })
        });

        const data = await response.json();

        if (response.ok && data.success) {
            // Redirect to the new URL
            window.location.href = `/<%= user.username %>/${newUrl}`;
        } else {
            throw new Error(data.message || 'Failed to update URL');
        }
    } catch (error) {
        console.error('Error updating URL:', error);
        alert(error.message || 'Failed to update URL. Please try again.');
    }
}

// Delete functions
function confirmDelete() {
    event.preventDefault();
    document.getElementById('deleteModal').classList.remove('hidden');
}

function closeDeleteModal() {
    document.getElementById('deleteModal').classList.add('hidden');
}

async function deletePage() {
    try {
        const response = await fetch('/api/pages/<%= page.urlId %>', {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (response.ok) {
            window.location.href = '/dashboard';
        } else {
            throw new Error(data.error || 'Failed to delete page');
        }
    } catch (error) {
        console.error('Error deleting page:', error);
        alert(error.message || 'Error deleting page. Please try again.');
    }
    closeDeleteModal();
}
</script>

<!-- Load the bundled JavaScript -->
<script src="/js/bundle.js"></script>